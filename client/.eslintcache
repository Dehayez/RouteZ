[{"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/index.js":"1","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/reportWebVitals.js":"2","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/App.js":"3","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/index.js":"4","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/index.js":"5","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/index.js":"6","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/routes/index.js":"7","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/index.js":"8","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/AuthLayout.js":"9","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/AuthRouteWithLayout.js":"10","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/RouteWithLayout.js":"11","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/PageLayout.js":"12","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SendReset.js":"13","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Landing.js":"14","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SubmitReset.js":"15","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/auth.service.js":"16","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/api.service.js":"17","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Register.js":"18","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Dashboard.js":"19","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfileSettings.js":"20","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Login.js":"21","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfile.js":"22","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signposts.js":"23","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signpost.js":"24","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Module.js":"25","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/config/index.js":"26","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/index.js":"27","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/ButtonLarge.js":"28"},{"size":542,"mtime":1608243719009,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1608232811446,"results":"31","hashOfConfig":"30"},{"size":2150,"mtime":1609525872834,"results":"32","hashOfConfig":"30"},{"size":144,"mtime":1608240934914,"results":"33","hashOfConfig":"30"},{"size":62,"mtime":1608232811447,"results":"34","hashOfConfig":"30"},{"size":159,"mtime":1608232811448,"results":"35","hashOfConfig":"30"},{"size":528,"mtime":1609521776750,"results":"36","hashOfConfig":"30"},{"size":560,"mtime":1609521776750,"results":"37","hashOfConfig":"30"},{"size":779,"mtime":1608397889550,"results":"38","hashOfConfig":"30"},{"size":748,"mtime":1608232811448,"results":"39","hashOfConfig":"30"},{"size":772,"mtime":1608232811448,"results":"40","hashOfConfig":"30"},{"size":1798,"mtime":1609521776746,"results":"41","hashOfConfig":"30"},{"size":2209,"mtime":1608400817099,"results":"42","hashOfConfig":"30"},{"size":157,"mtime":1608240322291,"results":"43","hashOfConfig":"30"},{"size":2247,"mtime":1608400828116,"results":"44","hashOfConfig":"30"},{"size":5554,"mtime":1609521776752,"results":"45","hashOfConfig":"30"},{"size":2229,"mtime":1609521776751,"results":"46","hashOfConfig":"30"},{"size":4329,"mtime":1609521776748,"results":"47","hashOfConfig":"30"},{"size":126,"mtime":1609521776746,"results":"48","hashOfConfig":"30"},{"size":5409,"mtime":1609521776748,"results":"49","hashOfConfig":"30"},{"size":2329,"mtime":1609521776747,"results":"50","hashOfConfig":"30"},{"size":914,"mtime":1609521776747,"results":"51","hashOfConfig":"30"},{"size":1112,"mtime":1609521776749,"results":"52","hashOfConfig":"30"},{"size":1178,"mtime":1609521776749,"results":"53","hashOfConfig":"30"},{"size":1074,"mtime":1609521776747,"results":"54","hashOfConfig":"30"},{"size":71,"mtime":1608232811444,"results":"55","hashOfConfig":"30"},{"size":81,"mtime":1608392401138,"results":"56","hashOfConfig":"30"},{"size":244,"mtime":1608396783893,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"69qnzb",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/index.js",[],["122","123"],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/reportWebVitals.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/App.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/routes/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/AuthLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/AuthRouteWithLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/RouteWithLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/PageLayout.js",["124","125"],"import { default as React, useCallback, useEffect, useState } from 'react';\n\nimport './PageLayout.scss';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import config\nimport { apiConfig } from '../config';\n\nconst PageLayout = ({children}) => {\n    // Use services\n    const { getMyself, currentUser } = useAuth();\n    const { getSignPosts } = useApi();\n\n    // All accessable data\n    const [ signPosts, setSignPosts ] = useState();\n    const [ user, setUser ] = useState();\n    const [ avatar, setAvatar ] = useState();\n\n    const getAllData = useCallback(() => {\n        const easyFetch = async () => {\n            // All user information\n            if (currentUser) {\n              const userData = await getMyself(currentUser.token);\n              setUser(userData);\n  \n              // Get users avatar, if he has one\n              if (userData.profile.avatar) {\n                  setAvatar(userData.profile.avatar);\n              };\n  \n              // All signposts\n              const signPostsData = await getSignPosts(currentUser.token);\n              setSignPosts(signPostsData);\n            };\n        };\n\n        easyFetch();\n    }, [getMyself, getSignPosts, currentUser]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n  return (\n    <div className=\"page\">\n        {/** Deze route gebruiken voor een afbeelding, best een alternatieve foto tonen als gebruiker geen avatar heeft */}\n        {\n            avatar ? (\n                <img src={`${apiConfig.baseURL}file/${avatar}`} alt=\"avatar\"/>\n            ) : ''\n        }\n        {/** Voor de wegwijzers best zoals de avatar het icoontje gaan ophalen vanuit de back-end */}\n      <main className=\"page-main\">\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default PageLayout;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SendReset.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Landing.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SubmitReset.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/auth.service.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/api.service.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Register.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Dashboard.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfileSettings.js",["126"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Importing services\nimport { useAuth, useApi } from '../services';\n\n// Import routes\nimport * as Routes from '../routes';\n\nconst MyProfileSettings = () => {\n    const history = useHistory();\n\n    // Using auth and api services\n    const { currentUser, getMyself, editMyself, deleteMyself, logout } = useAuth();\n    const { uploadFile } = useApi();\n\n    // Some important states\n    const [ user, setUser ] = useState();\n    const [ error, setError ] = useState();\n    const [ success, setSuccess ] = useState();\n    const [ remove, setRemove ] = useState();\n\n    const [ formData, setFormData ] = useState({\n        'avatar': '',\n        'firstName': '',\n        'lastName': '',\n        'email': '',\n        'phoneNumber': '',\n        'schoolName': '',\n        'professionalFunction': '',\n    });\n\n    const getAllData = useCallback(() => {\n        const fetchTheData = async () => {\n            if (currentUser) {\n                const userData = await getMyself(currentUser.token);\n                setUser(userData);\n\n                // Default values for form\n                if (userData) {\n                    setFormData({\n                        avatar: userData.profile.avatar ? userData.profile.avatar : '', \n                        firstName: userData.profile.firstName,\n                        lastName: userData.profile.lastName,\n                        email: userData.email,\n                        phoneNumber: userData.profile.phoneNumber ? userData.profile.phoneNumber : '',\n                        schoolName: userData.profile.schoolName ? userData.profile.schoolName : '',\n                        professionalFunction: userData.profile.professionalFunction ? userData.profile.professionalFunction : '',\n                    });\n                };\n            };\n        };\n\n        fetchTheData();\n    }, [getMyself, currentUser]);\n\n    const submitSettings = async (e) => {\n        e.preventDefault();\n\n        const result = await editMyself(currentUser.token, formData);\n\n        // Error handling\n        if (!result || result.error) {\n            setError(result.error ? result.error : 'Jouw account kon niet worden geupdate.');\n            return;\n        };\n\n        // Show success message\n        setSuccess(true);\n    };\n\n    /** Staat niet in het design maar misschien een knop voorzien om een account te verwijderen */\n    const removeUser = async () => {\n        // Deleting the user\n        const result = await deleteMyself(currentUser.token);\n\n        // Remove token out localStorage\n        await logout();\n\n        if (!result || result.error) {\n            setError('Jouw account kon niet verwijderd worden');\n            return;\n        };\n\n        // Redirect to the homepage\n        history.push(Routes.LANDING);\n    };\n\n    const changeImage = async (e) => {\n        // Get file\n        const file = e.target.files[0];\n\n        // Upload to server\n        const result = await uploadFile(file);\n\n        if (!result) {\n            setError('Jouw foto kon niet worden geupload.');\n            return;\n        };\n\n        // Place name into formdata\n        setFormData({\n            ...formData,\n            avatar: result.filename,\n        });\n\n        // Set error to zero\n        setError('');\n    };\n\n    const changeForms = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n    return (\n        <>\n            <form onSubmit={(e) => submitSettings(e)}>\n                <input type=\"file\" accept=\"image/*\" id=\"avatar\" onChange={(e) => changeImage(e)} />\n                <input type=\"text\" id=\"firstName\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.firstName : ''} required/>\n                <input type=\"text\" id=\"lastName\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.lastName : ''} required/>\n                <input type=\"email\" id=\"email\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.email : ''} required/>\n                <input type=\"tel\" id=\"phoneNumber\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.phoneNumber : ''}/>\n                <input type=\"text\" id=\"schoolName\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.schoolName : ''}/>\n                <textarea id=\"professionalFunction\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.professionalFunction : ''}/>\n                <button type=\"submit\">Bevestig</button>\n            </form>\n            {\n                remove ? (\n                    <>\n                        <button onClick={() => removeUser()}>\n                            Ja, zeker!\n                        </button>\n                        <button onClick={() => setRemove(!remove)}>\n                            Neen!\n                        </button>\n                    </>\n                ) : (\n                    <button onClick={() => setRemove(true)}>\n                        Ik wil mijn account verwijderen\n                    </button>\n                )\n            }\n            {\n                error && error\n            }\n            {\n                success && success\n            }\n        </>\n    )\n};\n\nexport default MyProfileSettings;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Login.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfile.js",["127","128"],"import React, { useCallback, useEffect, useState } from 'react';\n\n// Import services\nimport { useAuth } from '../services';\n\nconst MyProfile = () => {\n    // Use services\n    const { getMyself, currentUser } = useAuth();\n\n    // All accessable data\n    const [ user, setUser ] = useState();\n    const [ avatar, setAvatar ] = useState();\n\n    const getAllData = useCallback(() => {\n        const easyFetch = async () => {\n            // All user information\n            const userData = await getMyself(currentUser.token);\n            setUser(userData);\n\n            // Get users avatar, if he has one\n            if (userData.profile.avatar) {\n                setAvatar(userData.profile.avatar);\n            };\n        };\n\n        easyFetch();\n    }, [getMyself, currentUser.token]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n    return (\n        <></>\n    )\n};\n\nexport default MyProfile;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signposts.js",["129"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Importing services\nimport { useApi, useAuth } from '../services';\n\nconst Signposts = () => {\n    const history = useHistory();\n\n    const { getSignPosts } = useApi();\n    const { currentUser } = useAuth();\n\n    // Some important states\n    const [ signposts, setSignposts ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n            if (currentUser) {\n                const signpostsData = await getSignPosts(currentUser.token);\n                setSignposts(signpostsData);\n            };\n        };\n\n        fetchData();\n    }, [ getSignPosts, currentUser ]);\n\n    useEffect(() => {\n        getAllData();\n    }, [ getAllData ]);\n\n    // Going to specific signpost\n    const goToSign = async (id) => {\n        history.push(`/signposts/${id}`);\n    };\n\n    return (\n        <>\n        {\n            signposts && signposts.map((element, index) => {\n                return ''\n            })\n        }\n        </>\n    )\n};\n\nexport default Signposts;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signpost.js",["130"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\nconst Signpost = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    // Services\n    const { getSignPost } = useApi();\n    const { currentUser } = useAuth();\n\n    // Some states\n    const [ signpost, setSignpost ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n            if (currentUser) {\n                const signpostData = await getSignPost(currentUser.token, id);\n                setSignpost(signpostData);\n            };\n        };\n\n        fetchData();\n    }, [getSignPost, currentUser, id]);\n\n    const goToModule = (id) => {\n        history.push(`/modules/${id}`);\n    };\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n    return (\n        <>\n        {\n            signpost && (\n                signpost.modules && signpost.modules.map((element, index) => {\n                    return ''\n                })\n            )\n        }\n        </>\n    )\n};\n\nexport default Signpost;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Module.js",["131"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ReactHtmlParser from 'react-html-parser';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\nconst Module = () => {\n    const { id } = useParams();\n\n    // Services\n    const { getModule } = useApi();\n    const { currentUser } = useAuth();\n\n    // Some states\n    const [ module, setModule ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n            if (currentUser) {\n                const moduleData = await getModule(currentUser.token, id);\n                setModule(moduleData);\n            };\n        };\n\n        fetchData();\n    }, [getModule, currentUser]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n    return (\n        <>\n        {\n            module && (\n                <>\n                {\n                    ReactHtmlParser(module.content)\n                }\n                </>\n            )\n        }\n        </>\n    )\n};\n\nexport default Module;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/config/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/ButtonLarge.js",[],["132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":17,"column":13,"nodeType":"140","messageId":"141","endLine":17,"endColumn":22},{"ruleId":"138","severity":1,"message":"142","line":18,"column":13,"nodeType":"140","messageId":"141","endLine":18,"endColumn":17},{"ruleId":"138","severity":1,"message":"142","line":18,"column":13,"nodeType":"140","messageId":"141","endLine":18,"endColumn":17},{"ruleId":"138","severity":1,"message":"142","line":11,"column":13,"nodeType":"140","messageId":"141","endLine":11,"endColumn":17},{"ruleId":"138","severity":1,"message":"143","line":12,"column":13,"nodeType":"140","messageId":"141","endLine":12,"endColumn":19},{"ruleId":"138","severity":1,"message":"144","line":32,"column":11,"nodeType":"140","messageId":"141","endLine":32,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":29,"column":11,"nodeType":"140","messageId":"141","endLine":29,"endColumn":21},{"ruleId":"146","severity":1,"message":"147","line":28,"column":8,"nodeType":"148","endLine":28,"endColumn":32,"suggestions":"149"},{"ruleId":"134","replacedBy":"150"},{"ruleId":"136","replacedBy":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'signPosts' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'avatar' is assigned a value but never used.","'goToSign' is assigned a value but never used.","'goToModule' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["154"],["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [currentUser, getModule, id]",{"range":"157","text":"158"},[726,750],"[currentUser, getModule, id]"]