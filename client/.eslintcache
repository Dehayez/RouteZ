[{"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/index.js":"1","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/reportWebVitals.js":"2","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/App.js":"3","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/index.js":"4","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/index.js":"5","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/index.js":"6","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/index.js":"7","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/routes/index.js":"8","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/AuthLayout.js":"9","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/PageLayout.js":"10","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/SignpostLayout.js":"11","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/RouteWithLayout.js":"12","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/AuthRouteWithLayout.js":"13","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/toolbox.service.js":"14","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SubmitReset.js":"15","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Register.js":"16","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Login.js":"17","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SendReset.js":"18","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfile.js":"19","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Dashboard.js":"20","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Landing.js":"21","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signpost.js":"22","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfileSettings.js":"23","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signposts.js":"24","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Path.js":"25","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Material.js":"26","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyMaterials.js":"27","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/api.service.js":"28","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/auth.service.js":"29","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Materials.js":"30","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Module.js":"31","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/CreateMaterial.js":"32","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SearchResults.js":"33","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/EditMaterial.js":"34","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/config/index.js":"35","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/index.js":"36","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/index.js":"37","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/assets/images/index.js":"38","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/index.js":"39","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/progress/index.js":"40","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/navigation/index.js":"41","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/index.js":"42","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/documents/index.js":"43","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/links/index.js":"44","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/cards/index.js":"45","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/header/index.js":"46","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/index.js":"47","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/index.js":"48","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/RadioSelect.js":"49","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/Checkbox.js":"50","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/Tags.js":"51","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/FilterSelect.js":"52","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/navigation/NavigationItem.js":"53","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/navigation/Navigation.js":"54","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/progress/ProgressItem.js":"55","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/progress/Progress.js":"56","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/documents/CompletedDoc.js":"57","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/cards/CardMaterial.js":"58","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/links/BackLinks.js":"59","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/header/Header.js":"60","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/ListMaterialItem.js":"61","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/ListMaterials.js":"62","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/CardMaterials.js":"63","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/TipsAndTricks.js":"64","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Video.js":"65","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Order.js":"66","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Theory.js":"67","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Exercises.js":"68","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/ButtonSmall.js":"69","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/ButtonLarge.js":"70","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/assets/logos/index.js":"71","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/MaterialLayout.js":"72","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/cards/CardSignpost.js":"73","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/ErrorLayout.js":"74","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/NotFound.js":"75"},{"size":542,"mtime":1608243719009,"results":"76","hashOfConfig":"77"},{"size":362,"mtime":1608232811446,"results":"78","hashOfConfig":"77"},{"size":3354,"mtime":1613320232080,"results":"79","hashOfConfig":"77"},{"size":369,"mtime":1613315343884,"results":"80","hashOfConfig":"77"},{"size":159,"mtime":1608232811448,"results":"81","hashOfConfig":"77"},{"size":98,"mtime":1611065616226,"results":"82","hashOfConfig":"77"},{"size":983,"mtime":1613315405292,"results":"83","hashOfConfig":"77"},{"size":884,"mtime":1612701336433,"results":"84","hashOfConfig":"77"},{"size":779,"mtime":1608397889550,"results":"85","hashOfConfig":"77"},{"size":1574,"mtime":1613069980037,"results":"86","hashOfConfig":"77"},{"size":1587,"mtime":1612575919649,"results":"87","hashOfConfig":"77"},{"size":787,"mtime":1612565319221,"results":"88","hashOfConfig":"77"},{"size":748,"mtime":1608232811448,"results":"89","hashOfConfig":"77"},{"size":418,"mtime":1611065616226,"results":"90","hashOfConfig":"77"},{"size":2247,"mtime":1608400828116,"results":"91","hashOfConfig":"77"},{"size":3372,"mtime":1612457091938,"results":"92","hashOfConfig":"77"},{"size":2085,"mtime":1611335825759,"results":"93","hashOfConfig":"77"},{"size":2209,"mtime":1608400817099,"results":"94","hashOfConfig":"77"},{"size":2072,"mtime":1612575668999,"results":"95","hashOfConfig":"77"},{"size":1762,"mtime":1612572943755,"results":"96","hashOfConfig":"77"},{"size":157,"mtime":1608240322291,"results":"97","hashOfConfig":"77"},{"size":2397,"mtime":1612573881418,"results":"98","hashOfConfig":"77"},{"size":6722,"mtime":1613060667818,"results":"99","hashOfConfig":"77"},{"size":1710,"mtime":1613310207543,"results":"100","hashOfConfig":"77"},{"size":4823,"mtime":1612716547615,"results":"101","hashOfConfig":"77"},{"size":6353,"mtime":1613063320546,"results":"102","hashOfConfig":"77"},{"size":1979,"mtime":1613076503649,"results":"103","hashOfConfig":"77"},{"size":8938,"mtime":1612701336434,"results":"104","hashOfConfig":"77"},{"size":6686,"mtime":1612701336435,"results":"105","hashOfConfig":"77"},{"size":6889,"mtime":1613060785562,"results":"106","hashOfConfig":"77"},{"size":5185,"mtime":1612701336431,"results":"107","hashOfConfig":"77"},{"size":7259,"mtime":1612701336429,"results":"108","hashOfConfig":"77"},{"size":2666,"mtime":1613075372446,"results":"109","hashOfConfig":"77"},{"size":7577,"mtime":1612701336430,"results":"110","hashOfConfig":"77"},{"size":71,"mtime":1608232811444,"results":"111","hashOfConfig":"77"},{"size":150,"mtime":1611417993430,"results":"112","hashOfConfig":"77"},{"size":53,"mtime":1611065616221,"results":"113","hashOfConfig":"77"},{"size":170,"mtime":1613321430496,"results":"114","hashOfConfig":"77"},{"size":214,"mtime":1612701336427,"results":"115","hashOfConfig":"77"},{"size":144,"mtime":1611774644053,"results":"116","hashOfConfig":"77"},{"size":157,"mtime":1611776329641,"results":"117","hashOfConfig":"77"},{"size":210,"mtime":1611754948181,"results":"118","hashOfConfig":"77"},{"size":72,"mtime":1612701336426,"results":"119","hashOfConfig":"77"},{"size":63,"mtime":1611065616219,"results":"120","hashOfConfig":"77"},{"size":132,"mtime":1613231761457,"results":"121","hashOfConfig":"77"},{"size":65,"mtime":1608232811444,"results":"122","hashOfConfig":"77"},{"size":233,"mtime":1612565319219,"results":"123","hashOfConfig":"77"},{"size":208,"mtime":1611065616223,"results":"124","hashOfConfig":"77"},{"size":1838,"mtime":1611754948181,"results":"125","hashOfConfig":"77"},{"size":560,"mtime":1613312427034,"results":"126","hashOfConfig":"77"},{"size":2365,"mtime":1611754948181,"results":"127","hashOfConfig":"77"},{"size":4551,"mtime":1613070663134,"results":"128","hashOfConfig":"77"},{"size":674,"mtime":1612547433758,"results":"129","hashOfConfig":"77"},{"size":1877,"mtime":1613076680283,"results":"130","hashOfConfig":"77"},{"size":738,"mtime":1613232309195,"results":"131","hashOfConfig":"77"},{"size":1365,"mtime":1613234580957,"results":"132","hashOfConfig":"77"},{"size":2020,"mtime":1612701336426,"results":"133","hashOfConfig":"77"},{"size":2695,"mtime":1613067082718,"results":"134","hashOfConfig":"77"},{"size":345,"mtime":1611065616219,"results":"135","hashOfConfig":"77"},{"size":2950,"mtime":1613069959540,"results":"136","hashOfConfig":"77"},{"size":3934,"mtime":1612995519259,"results":"137","hashOfConfig":"77"},{"size":1093,"mtime":1612965086391,"results":"138","hashOfConfig":"77"},{"size":613,"mtime":1613065175401,"results":"139","hashOfConfig":"77"},{"size":154,"mtime":1612569906814,"results":"140","hashOfConfig":"77"},{"size":328,"mtime":1612569910311,"results":"141","hashOfConfig":"77"},{"size":792,"mtime":1612574670874,"results":"142","hashOfConfig":"77"},{"size":659,"mtime":1612570480797,"results":"143","hashOfConfig":"77"},{"size":7152,"mtime":1612719283824,"results":"144","hashOfConfig":"77"},{"size":281,"mtime":1611752267608,"results":"145","hashOfConfig":"77"},{"size":244,"mtime":1608396783893,"results":"146","hashOfConfig":"77"},{"size":261,"mtime":1611351533607,"results":"147","hashOfConfig":"77"},{"size":1586,"mtime":1613069973782,"results":"148","hashOfConfig":"77"},{"size":1002,"mtime":1613302170401,"results":"149","hashOfConfig":"77"},{"size":213,"mtime":1613320293091,"results":"150","hashOfConfig":"77"},{"size":874,"mtime":1613321564865,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"69qnzb",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"154"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"154"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"154"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"154"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"154"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"154"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/index.js",[],["325","326"],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/reportWebVitals.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/App.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/routes/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/AuthLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/PageLayout.js",["327","328","329","330"],"import { default as React, useCallback, useEffect, useState } from 'react';\n\nimport './PageLayout.scss';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import config\nimport { apiConfig } from '../config';\n\n// Import components\nimport { Navigation, Header } from '../components'\n\nconst PageLayout = ({ children }) => {\n    // Use services\n    const { getMyself, currentUser } = useAuth();\n    const { getSignPosts } = useApi();\n\n    // All accessable data\n    const [ signPosts, setSignPosts ] = useState();\n    const [ user, setUser ] = useState();\n\tconst [ avatar, setAvatar ] = useState();\n\n\tconst pageTitle = 'Dashboard';\n\n    const getAllData = useCallback(() => {\n        const easyFetch = async () => {\n            // All user information\n            if (currentUser) {\n              const userData = await getMyself(currentUser.token);\n              setUser(userData);\n  \n              // Get users avatar, if he has one\n              if (userData.profile.avatar) {\n                  setAvatar(userData.profile.avatar);\n              };\n  \n              // All signposts\n              const signPostsData = await getSignPosts(currentUser.token);\n              setSignPosts(signPostsData);\n            };\n        };\n\n        easyFetch();\n    }, [getMyself, getSignPosts, currentUser]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n  return (\n    <div className=\"page\">\n\t\t<Navigation/>\n\t\t<main className=\"page-main\">\n\t\t\t<Header pageTitle={pageTitle}/>\n\t\t\t{children}\n\t\t</main>\n    </div>\n  );\n};\n\nexport default PageLayout;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/SignpostLayout.js",["331","332","333","334"],"import { default as React, useCallback, useEffect, useState } from 'react';\n\nimport './SignpostLayout.scss';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import config\nimport { apiConfig } from '../config';\n\n// Import components\nimport { Navigation, Header } from '../components'\n\n\nconst SignpostLayout = ({ children }) => {\n    // Use services\n    const { getMyself, currentUser } = useAuth();\n    const { getSignPosts } = useApi();\n\n    // All accessable data\n    const [ signPosts, setSignPosts ] = useState();\n    const [ user, setUser ] = useState();\n\tconst [ avatar, setAvatar ] = useState();\n\n\tconst pageTitle = 'Dashboard';\n\n    const getAllData = useCallback(() => {\n        const easyFetch = async () => {\n            // All user information\n            if (currentUser) {\n              const userData = await getMyself(currentUser.token);\n              setUser(userData);\n  \n              // Get users avatar, if he has one\n              if (userData.profile.avatar) {\n                  setAvatar(userData.profile.avatar);\n              };\n  \n              // All signposts\n              const signPostsData = await getSignPosts(currentUser.token);\n              setSignPosts(signPostsData);\n            };\n        };\n\n        easyFetch();\n    }, [getMyself, getSignPosts, currentUser]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n  return (\n    <div className=\"page\">\n\t\t<Navigation/>\n\t\t<main className=\"page-main\">\n\t\t\t<Header pageTitle={pageTitle}/>\n\t\t\t{children}\n\t\t</main>\n    </div>\n  );\n};\n\nexport default SignpostLayout;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/RouteWithLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/utilities/AuthRouteWithLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/toolbox.service.js",["335"],"import React, { createContext, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst ToolboxContext = createContext();\nconst useToolbox = () => useContext(ToolboxContext);\n\nconst ToolboxProvider = ({children}) => {\n  return (\n    <ToolboxContext.Provider value={{\n    }}>\n      {children}\n    </ToolboxContext.Provider>\n  )\n};\n\nexport {\n  ToolboxContext,\n  useToolbox,\n  ToolboxProvider,\n};\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SubmitReset.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Register.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Login.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SendReset.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfile.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Dashboard.js",["336"],"import React, { useCallback, useEffect, useState } from 'react';\n\n// Import services\nimport { useAuth } from '../services';\n\n// Import components\nimport { ButtonLarge, Progress } from '../components'\nimport { DefaultImage } from '../assets/images';\nconst Dashboard = () => {\n    // Use services\n    const { getMyself, currentUser } = useAuth();\n\n    // All accessable data\n    const [ user, setUser ] = useState();\n    const [ avatar, setAvatar ] = useState();\n\n    const getAllData = useCallback(() => {\n        const easyFetch = async () => {\n            // All user information\n            const userData = await getMyself(currentUser.token);\n            setUser(userData);\n\n            // Get users avatar, if has one\n            if (userData.profile.avatar) {\n                setAvatar(userData.profile.avatar);\n            };\n        };\n\n        easyFetch();\n    }, [getMyself, currentUser.token]);\n\n    useEffect(() => {\n\t\tgetAllData();\n\t}, [getAllData]);\n\n    return (\n        <div className=\"dashboard\">\n\t\t\t<div className=\"dashboard-card\">\n\t\t\t\t<div className=\"dashboard-card-content\">\n\t\t\t\t\t<div className=\"dashboard-card-content-text\">\n\t\t\t\t\t{ \n\t\t\t\t\t\tuser && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3 className=\"dashboard-card-content-text__title\">Goeiemiddag, {user.profile.firstName}!</h3>\n\t\t\t\t\t\t\t\t<p className=\"dashboard-card-content-text__text\">Je was voor het laatst gebleven aan wegwijzer 4</p>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"dashboard-card-content-button\">\n\t\t\t\t\t\t<ButtonLarge content=\"Ga verder\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"dashboard-card-image\">\n\t\t\t\t\t<img className=\"dashboard-card-image__image\" src={ DefaultImage } alt=\"RouteZ\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<Progress/>\n        </div>\n    )\n};\n\nexport default Dashboard;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Landing.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signpost.js",["337","338"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useParams, Link } from 'react-router-dom';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import components\nimport { BackLinks, ButtonSmall } from '../components';\n\n// Import config\nimport { apiConfig } from '../config';\n\n// Import routes\nimport * as Routes from '../routes';\n\nconst Signpost = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    // Services\n    const { getSignPost } = useApi();\n    const { currentUser } = useAuth();\n\n    // Some states\n    const [ signpost, setSignpost ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n            if (currentUser) {\n                const signpostData = await getSignPost(currentUser.token, id);\n                setSignpost(signpostData);\n            };\n        };\n\n        fetchData();\n    }, [getSignPost, currentUser, id]);\n\n\t// fout; object object in url\n    const goToModule = (id) => {\n        history.push(`/modules/${id}`);\n    };\n\n    useEffect(() => {\n        getAllData();\n\t}, [getAllData]);\n\n    return (\n\t\t<>\n\t\t{\n\t\t\tsignpost && (\n\t\t\t\t<div className=\"signpost\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsignpost && (\n\t\t\t\t\t\t\t<BackLinks \n\t\t\t\t\t\t\t\tlinks={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpath: `${Routes.SIGNPOSTS}`,\n\t\t\t\t\t\t\t\t\t\troute: \"wegwijzers \"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpath: `${Routes.SIGNPOST.replace(':id', signpost._id)}`,\n\t\t\t\t\t\t\t\t\t\troute: `>  ${signpost.shortedTitle}`\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<h1 className=\"signpost-title\">{ signpost.title }</h1>\n\t\t\t\t\t<p className=\"signpost-text\">{ signpost.text }</p>\n\n\t\t\t\t\t<img className=\"signpost-illustration\" src={`${apiConfig.baseURL}file/${signpost.illustration}`}/>\n\n\t\t\t\t\t<div className=\"signpost-modules\">\n\t\t\t\t\t\t<h5 className=\"signpost-modules-title\">Modules</h5>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsignpost && (\n\t\t\t\t\t\t\t\tsignpost.modules && signpost.modules.map((module, i) => {\n\t\t\t\t\t\t\t\t\treturn <div className=\"signpost-modules-item\" key={i}>\n\t\t\t\t\t\t\t\t\t\t<p className=\"signpost-modules-item-title\">{module.title}</p>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`${Routes.MODULE.replace(':id', module._id)}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ButtonSmall content=\"Start\" color=\"secondary\"/>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t}\n\t\t</>\n    )\n};\n\nexport default Signpost;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyProfileSettings.js",["339","340","341","342","343","344","345"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Importing services\nimport { useAuth, useApi } from '../services';\n\n// Import routes\nimport * as Routes from '../routes';\n\n// Import config\nimport { apiConfig } from '../config';\n\n//Import components\nimport { ButtonLarge, ButtonSmall }  from '../components/buttons';\nimport { DefaultImage } from '../assets/images';\n\nconst MyProfileSettings = () => {\n    const history = useHistory();\n\n    // Using auth and api services\n    const { currentUser, getMyself, editMyself, deleteMyself, logout } = useAuth();\n    const { uploadFile } = useApi();\n\n    // Some important states\n    const [ user, setUser ] = useState();\n    const [ error, setError ] = useState();\n    const [ success, setSuccess ] = useState();\n    const [ remove, setRemove ] = useState();\n\n    const [ formData, setFormData ] = useState({\n        'avatar': '',\n        'firstName': '',\n        'lastName': '',\n        'email': '',\n        'phoneNumber': '',\n        'schoolName': '',\n        'professionalFunction': '',\n    });\n\n    const getAllData = useCallback(() => {\n        const fetchTheData = async () => {\n            if (currentUser) {\n                const userData = await getMyself(currentUser.token);\n                setUser(userData);\n\n                // Default values for form\n                if (userData) {\n                    setFormData({\n                        avatar: userData.profile.avatar ? userData.profile.avatar : '', \n                        firstName: userData.profile.firstName,\n                        lastName: userData.profile.lastName,\n                        email: userData.email,\n                        phoneNumber: userData.profile.phoneNumber ? userData.profile.phoneNumber : '',\n                        schoolName: userData.profile.schoolName ? userData.profile.schoolName : '',\n                        professionalFunction: userData.profile.professionalFunction ? userData.profile.professionalFunction : '',\n                    });\n                };\n            };\n        };\n\n        fetchTheData();\n    }, [getMyself, currentUser]);\n\n    const submitSettings = async (e) => {\n        e.preventDefault();\n\n        const result = await editMyself(currentUser.token, formData);\n\n        // Error handling\n        if (!result || result.error) {\n            setError(result.error ? result.error : 'Jouw account kon niet worden geupdate.');\n            return;\n        };\n\n        // Show success message\n        setSuccess(true);\n    };\n\n    /** Staat niet in het design maar misschien een knop voorzien om een account te verwijderen */\n    const removeUser = async () => {\n        // Deleting the user\n        const result = await deleteMyself(currentUser.token);\n\n        // Remove token out localStorage\n        await logout();\n\n        if (!result || result.error) {\n            setError('Jouw account kon niet verwijderd worden');\n            return;\n        };\n\n        // Redirect to the homepage\n        history.push(Routes.LANDING);\n    };\n\n    const changeImage = async (e) => {\n        // Get file\n        const file = e.target.files[0];\n\n        // Upload to server\n        const result = await uploadFile(file);\n\n        if (!result) {\n            setError('Jouw foto kon niet worden geupload.');\n            return;\n        };\n\n        // Place name into formdata\n        setFormData({\n            ...formData,\n            avatar: result.filename,\n        });\n\n        // Set error to zero\n        setError('');\n    };\n\n    const changeForms = (e) => {\n        setFormData({\n            ...formData,\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n    return (\n        <div className=\"settings\">\n            <form className=\"form-label-left\" onSubmit={(e) => submitSettings(e)}>\n\n\t\t\t\t{\n\t\t\t\t\tformData.avatar ? (\n\t\t\t\t\t\t<img className=\"form-label-left-image\" src={`${apiConfig.baseURL}file/${formData.avatar}`} alt=\"profile\"/>\n\t\t\t\t\t) : <img className=\"form-label-left-image\" src={ DefaultImage } alt=\"profile\"/>\n\t\t\t\t}\n                <input type=\"file\" accept=\"image/*\" id=\"avatar\" onChange={(e) => changeImage(e)} ></input>\n\t\t\t\t\n\t\t\t\t<div className=\"form-label-left-item\">\n\t\t\t\t\t<label className=\"form-label-left-label\">Voornaam*</label>\n\t\t\t\t\t<input className=\"form-label-left-input\" type=\"text\" id=\"firstName\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.firstName : ''} required/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-label-left-item\">\n\t\t\t\t\t<label className=\"form-label-left-label\">Achternaam*</label>\n\t\t\t\t\t<input className=\"form-label-left-input\" type=\"text\" id=\"lastName\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.lastName : ''} required/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-label-left-item\">\n\t\t\t\t\t<label className=\"form-label-left-label\">E-mail*</label>\n\t\t\t\t\t<input className=\"form-label-left-input\" type=\"email\" id=\"email\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.email : ''} required/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-label-left-item\">\n\t\t\t\t\t<label className=\"form-label-left-label\">Telefoonnummer</label>\n\t\t\t\t\t<input className=\"form-label-left-input\" type=\"tel\" id=\"phoneNumber\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.phoneNumber : ''}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-label-left-item\">\n\t\t\t\t\t<label className=\"form-label-left-label\">Schoolnaam</label>\n\t\t\t\t\t<input className=\"form-label-left-input\" type=\"text\" id=\"schoolName\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.schoolName : ''}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-label-left-item\">\n\t\t\t\t\t<label className=\"form-label-left-label\">Functie</label>\n\t\t\t\t\t<textarea className=\"form-label-left-input\" id=\"professionalFunction\" onChange={(e) => changeForms(e)} defaultValue={formData ? formData.professionalFunction : ''}/>\n\t\t\t\t</div>\n\n\t\t\t\t<ButtonLarge type=\"submit\" content=\"Bevestig\" />\n            </form>\n\n\t\t\t{/* <div className=\"settings-danger\">\n\t\t\t\t<h3 className=\"settings-danger-title\">Gevarenzone</h3>\n\t\t\t\t{\n                remove ? (\n                    <div className=\"settings-danger-buttons\">\n\t\t\t\t\t\t<ButtonSmall onClick={() => setRemove(!remove)} color=\"danger-secondary\" content=\"Annuleer\"/>\n\t\t\t\t\t\t<ButtonSmall onClick={() => removeUser()} color=\"danger-fill\" content=\"Verwijder account\"/>\n                    </div>\n                ) : (\n\t\t\t\t\t<ButtonSmall onClick={() => setRemove(true)} color=\"danger\" content=\"Verwijder account\"/>\n                )\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\terror && error\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tsuccess && success\n\t\t\t\t}\n\t\t\t</div> */}\n\n        </div>\n    )\n};\n\nexport default MyProfileSettings;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Signposts.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Path.js",["346","347"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import routes\nimport * as Routes from '../routes';\n\n// Import partials\nimport { Exercises, Theory } from '../partials';\n\n// Import components\nimport { BackLinks, ButtonSmall } from '../components';\n\nconst Path = () => {\n    const history = useHistory();\n    const { id, type, order } = useParams();\n\n    // Services\n    const { getPath, getModules, getSignPosts } = useApi();\n    const { currentUser, editProgress, getMyself } = useAuth();\n\n    // Some states\n    const [ path, setPath ] = useState();\n    const [ paths, setPaths ] = useState();\n    const [ pathIndex, setPathIndex ] = useState();\n\n    const [ moduleSet, setModuleSet ] = useState();\n    const [ signpost, setSignpost ] = useState();\n\n    const [ exercises, setExercises ] = useState();\n    const [ exerciseDone, setExerciseDone ] = useState(true);\n\n    const [ currentUserData, setCurrentUserData ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n          try {\n            if (currentUser) {\n              let moduleId;\n\n              const pathData = await getPath(currentUser.token, id);\n              const moduleData = await getModules(currentUser.token);\n              const signpostData = await getSignPosts(currentUser.token);\n              const userData = await getMyself(currentUser.token);\n\n              setCurrentUserData(userData);\n\n              if (pathData.type === \"Oefeningen\") setExerciseDone(false);\n\n              for (let i = 0; i < moduleData.length; i++) {\n                for (let j = 0; j < moduleData[i]._pathIds.length; j++) {\n                  if (moduleData[i]._pathIds[j]._id === pathData._id) {\n                    setPaths(moduleData[i]._pathIds);\n                    setPathIndex(j);\n                    setModuleSet({id: moduleData[i]._id, title: moduleData[i].title});\n                    moduleId = moduleData[i]._id;\n                  };\n                };\n              };\n\n              if (pathData.type === \"Oefeningen\") setExercises(pathData.exercises);\n              setPath(pathData);\n\n              for (let i = 0; i < signpostData.length; i++) {\n                for (let j = 0; j < signpostData[i].modules.length; j++) {\n                  if (signpostData[i].modules[j]._id === moduleId) {\n                    setSignpost(signpostData[i]);\n                  }\n                }\n              };\n            };\n          } catch (e) {\n            history.push(Routes.NOT_FOUND);\n          };\n        };\n\n        fetchData();\n    }, [getPath, getModules, getSignPosts , history, currentUser, id]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n    const completePath = async () => {\n      await editProgress(currentUser.token, {\n        pathId: path._id,\n      });\n\n      if (pathIndex === paths.length-1) {\n        history.push(`${Routes.MODULE.replace(':id', moduleSet.id)}`);\n      } else {\n        history.push(`${Routes.PATH.replace(':id', paths[pathIndex+1]._id).replace(':type', paths[pathIndex+1].type.toLowerCase()).replace(':order', 1)}`);\n      };\n    };\n\n    const previousPath = async () => {\n      history.push(`${Routes.PATH.replace(':id', paths[pathIndex-1]._id).replace(':type', paths[pathIndex-1].type.toLowerCase()).replace(':order', 1)}`);\n    };\n\n    return (\n        <>\n        {\n             path && currentUserData && (\n                <div className=\"signpost\">\n\t\t\t\t\t{\n\t\t\t\t\tsignpost && <BackLinks \n\t\t\t\t\t\tlinks={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath: `${Routes.SIGNPOSTS}`,\n\t\t\t\t\t\t\troute: \"wegwijzers \"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath: `${Routes.SIGNPOST.replace(':id', signpost._id)}`,\n\t\t\t\t\t\t\troute: ` > ${signpost.title}`\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath: `${Routes.MODULE.replace(':id', moduleSet.id)}`,\n\t\t\t\t\t\t\troute: ` > ${moduleSet.title}`\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath: `${Routes.PATH.replace(':id', path._id).replace(':order', 1).replace(':type', path.type.toLowerCase())}`,\n\t\t\t\t\t\t\troute: ` > ${path.title}`\n\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tpath.type === 'Theorie' && (\n\t\t\t\t\t\t\t<Theory content={path} order={order} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tpath.type === 'Oefeningen' && exercises && (\n\t\t\t\t\t\t\t<Exercises previousResults={currentUserData.progress._finishedExercises} exercises={exercises} exerciseDone={exerciseDone} setExerciseDone={setExerciseDone} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"order-buttons\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\tpathIndex !== 0 && (\n\t\t\t\t\t\t\t<ButtonSmall onClick={previousPath} color=\"secondary\" content=\"Vorige\"/>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<ButtonSmall onClick={completePath} color=\"secondary\" content=\"Volgende\"/>\n\t\t\t\t\t</div>\n                </div>\n            )\n        }\n        </>\n    )\n};\n\nexport default Path;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Material.js",["348","349"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\n\n// Parse HTML\nimport { default as HTMLParser } from 'react-html-parser';\n\n// Formatting date\nimport { default as moment } from 'moment';\nimport 'moment/locale/nl-be';\n\n// Import services\nimport { useApi, useAuth } from '../services';\n\n// Import config\nimport { apiConfig } from '../config';\n\n// Import routes\nimport * as Routes from '../routes';\nimport { CardMaterials } from '../partials';\n\n// Components\nimport { ButtonSmall } from '../components'\n\n// Icons \nimport { IoHeartSharp, IoHeartOutline } from 'react-icons/io5'\nimport { HiOutlineDownload } from 'react-icons/hi';\n\n// Bootstrap\nimport { Row, Col } from 'react-bootstrap'\n\n// Images\nimport { DefaultImage } from '../assets/images';\n\nconst Material = () => {\n  const history = useHistory();\n\n  // Get name\n  const { name } = useParams();\n\n  // Services\n  const { getMaterial, addLikeToMaterial, addDislikeToMaterial, getDoc, queryMaterials } = useApi();\n  const { currentUser } = useAuth();\n\n  // States\n  const [ material, setMaterial ] = useState();\n  const [ extraMaterials, setExtraMaterials ] = useState();\n\n  const [ liked, setLiked ] = useState();\n  const [ likedDigit, setLikedDigit ] = useState();\n\n  const [ avatar, setAvatar ] = useState();\n\n  // Init date\n  let date = moment(material && material._createdAt);\n  moment.locale('nl-be');\n\n  // Get material\n  const fetchMaterial = useCallback(async () => {\n    try {\n      const materialData = await getMaterial(name);\n      setMaterial(materialData);\n\n      if (materialData._likeIds.includes(currentUser.id)) {\n        setLiked(true);\n      };\n\n      const queryMaterial = await queryMaterials(false, false, [materialData._moduleId]);\n\n      if (!queryMaterial.error) {\n        let array = [];\n\n        queryMaterial.forEach(element => {\n          array.push(element.material);\n        });\n\n        setExtraMaterials(array);\n      };\n\n      setLikedDigit(materialData._likeIds.length);\n    } catch (e) {\n      history.push(Routes.NOT_FOUND);\n    };\n  }, [getMaterial, queryMaterials, name, history, currentUser]);\n\n  useEffect(() => {\n    fetchMaterial();\n  }, [fetchMaterial]);\n\n  // Add like\n  const likeMaterial = async () => {\n    await addLikeToMaterial(currentUser.token, currentUser.id, material._id);\n    setLiked(true);\n    setLikedDigit(likedDigit+1);\n  };\n\n  // Remove like\n  const dislikeMaterial = async () => {\n    await addDislikeToMaterial(currentUser.token, currentUser.id, material._id);\n    setLiked(false);\n    setLikedDigit(likedDigit-1);\n  };\n\n  return (\n    <div className=\"material\">\n\t\t{\n\t\tmaterial && (\n\t\t\t<>\n\t\t\t\t<Row className=\"material-detail\">\n\t\t\t\t\t{/** Material */}\n\t\t\t\t\t\t<Col lg={7} className=\"material-detail-left\">\n\t\t\t\t\t\t\t<div className=\"material-detail-title-wrapper\">\n\t\t\t\t\t\t\t\t<h1 className=\"material-detail-title\">{material.title}</h1>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tliked ? <div className=\"material-icon-heart-wrapper\"> <IoHeartSharp className=\"material-icon-heart material-icon-heart--big material-icon-heart--fill\" onClick={dislikeMaterial} title=\"Dislike\"/></div> \n\t\t\t\t\t\t\t\t\t\t: <div className=\"material-icon-heart-wrapper\"> <IoHeartOutline className=\"material-icon-heart material-icon-heart--big\" onClick={likeMaterial} title=\"Like\"/></div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p className=\"material-detail-text\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tHTMLParser(material.description)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col lg={5} className=\"material-detail-right\">\n\t\t\t\t\t\t\t{/** Author */}\n\t\t\t\t\t\t\t<h5 className=\"material-detail-right-title\">Auteur van het materiaal</h5>\n\t\t\t\t\t\t\t<div className=\"material-detail-right-profile\" >\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmaterial.author.profile.avatar ? (\n\t\t\t\t\t\t\t\t\t\t<img className=\"material-detail-right-profile__image\" src={`${apiConfig.baseURL}file/${ material.author.profile.avatar}`} alt=\"profile\"/>\n\t\t\t\t\t\t\t\t\t) : <img className=\"material-detail-right-profile__image\" src={ DefaultImage } alt=\"profile\"/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<div className=\"material-detail-right-profile__text\">\n\t\t\t\t\t\t\t\t\t<p className=\"material-detail-right-profile__text-name\">{material.author.profile.firstName + ' ' + material.author.profile.lastName}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"material-detail-right-profile__text-settings\">{material.author.profile.schoolName}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* <p className=\"material-detail-right-download-title\">Download</p> */}\n\t\t\t\t\t\t\t<div className=\"material-detail-right-download\" title=\"Download PDF\" onClick={() => getDoc(material.file)}>\n\t\t\t\t\t\t\t\t<div className=\"material-detail-right-download-text\">\n\t\t\t\t\t\t\t\t\t<p className=\"material-detail-right-download-text__name\">{material.filename}</p>\n\t\t\t\t\t\t\t\t\t<p className=\"material-detail-right-download-text__data\">{date.format('L')} | {material.size} | TODO pagina's</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{/** Later on adding pages */}\n\t\t\t\t\t\t\t\t<HiOutlineDownload className=\"material-icon__download\" /> \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"material-detail-right-likes\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tliked ? <div className=\"material-icon-heart-wrapper\"> <IoHeartSharp className=\"material-icon-heart material-icon-heart--fill\" onClick={dislikeMaterial} title=\"Dislike\"/></div> \n\t\t\t\t\t\t\t\t\t: <div className=\"material-icon-heart-wrapper\"> <IoHeartOutline className=\"material-icon-heart\" onClick={likeMaterial} title=\"Like\"/></div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<p className=\"material-detail-right-likes__text\">\n\t\t\t\t\t\t\t\t\t<strong>{likedDigit} { likedDigit === 1 ? ' gedeeld hartje' : ' gedeelde hartjes' }</strong><br/>\n\t\t\t\t\t\t\t\t\t{ likedDigit === 0 ? 'Er zijn nog geen hartjes uitgedeeld' : 'Dit materiaal wordt geappreciëerd' }\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\t\n\t\t\t\t<div className=\"material-recommended\">\n\t\t\t\t\t{/** Extra materials */}\n\t\t\t\t\t{\n\t\t\t\t\t\textraMaterials && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"material-recommended-header\">\n\t\t\t\t\t\t\t\t<p>Dit lijkt interessant voor jou</p>\n\t\t\t\t\t\t\t\t<NavLink to={{pathname: Routes.MATERIALS, props: { module: material._moduleId,}}}>\n\t\t\t\t\t\t\t\t\t<ButtonSmall content=\"Bekijk meer\" color=\"secondary\"/>\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<CardMaterials\n\t\t\t\t\t\t\t\tmaterials={extraMaterials}\n\t\t\t\t\t\t\t\tuser={currentUser.id}\n\t\t\t\t\t\t\t\ttoken={currentUser.token}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t\t}\n    </div>\n  );\n};\n\nexport default Material;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/MyMaterials.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/api.service.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/services/auth.service.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Materials.js",["350"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n// Import partials\nimport { ListMaterials } from '../partials';\n\n// Import components\nimport { FilterSelect, ButtonSmall } from '../components';\n\n// Icon\nimport { FiSearch } from 'react-icons/fi'\n\n// Import routes\nimport * as Routes from '../routes';\n\n// Import services\nimport { useApi, useAuth } from '../services';\n\n\nconst Materials = () => {\n  const history = useHistory();\n\n  // Is it a redirect?\n  const { props } = useLocation();\n\n  // Services\n  const { getSignPosts, getMaterials, queryMaterials, getTags } = useApi();\n  const { currentUser } = useAuth();\n\n  // States\n  const [ signposts, setSignposts ] = useState();\n  const [ tags, setTags ] = useState();\n\n  const [ textFiles, setTextFiles ] = useState();\n  const [ presentations, setPresentations ] = useState();\n  const [ videos, setVideos ] = useState();\n\n  const [ queryForm, setQueryForm ] = useState({\n    \"keywords\": \"\",\n    \"type\": [],\n    \"modules\": [],\n    \"tags\": [],\n    \"target\": [],\n  });\n\n  // Context\n  const typesContext = [{\n    id: \"Presentatie\",\n    title: \"Presentatie\",\n  }, {\n    id: \"Document\",\n    title: \"Document\",\n  }, {\n    id: \"Video\",\n    title: \"Video\",\n  }];\n\n  const secondTypesContext = [{\n    id: \"De kiendjes\",\n    title: \"De kiendjes\",\n  }, {\n    id: \"De vintjes\",\n    title: \"De vintjes\",\n  }, {\n    id: \"De vrouwtjes\",\n    title: \"De vrouwtjes\",\n  }];\n\n  // Simple fetch of all data\n  const getData = useCallback(async () => {\n    try {\n      const signpostData = await getSignPosts(currentUser.token);\n      const tagsData = await getTags();\n      setTags(tagsData);\n      setSignposts(signpostData);\n\n      let txt = [];\n      let vid = [];\n      let pres = [];\n\n      // Check if it's coming from a redirect\n      if (props && props.module) {\n        const materialData = await queryMaterials(false, false, [props.module]);  \n        for (let i = 0; i < materialData.length; i++) {\n          switch (materialData[i].material.type) {\n            case \"Document\":\n              txt.push(materialData[i].material);\n              break;\n            case \"Video\":\n              vid.push(materialData[i].material);\n              break;\n            case \"Presentatie\":\n              pres.push(materialData[i].material);\n              break;\n            default:\n              break;\n          };\n        };\n      } else {\n        // Otherwise show everything\n        const materialData = await getMaterials();\n        for (let i = 0; i < materialData.length; i++) {\n          switch (materialData[i].type) {\n            case \"Document\":\n              txt.push(materialData[i]);\n              break;\n            case \"Video\":\n              vid.push(materialData[i]);\n              break;\n            case \"Presentatie\":\n              pres.push(materialData[i]);\n              break;\n            default:\n              break;\n          };\n        };\n      };\n\n      setPresentations(pres);\n      setTextFiles(txt);\n      setVideos(vid);\n    } catch (e) {\n      history.push(Routes.NOT_FOUND);\n    };\n  }, [getSignPosts, queryMaterials, props, getMaterials, history, getTags, currentUser]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n\n  const searchMaterials = async (e) => {\n    e.preventDefault();\n\n    let txt = [];\n    let vid = [];\n    let pres = [];\n\n    if (queryForm.keywords.length !== 0 || queryForm.modules.length !== 0 || queryForm.type.length !== 0 || queryForm.target.length !== 0) {\n      const materialData = await queryMaterials(\n        queryForm.keywords.length !== 0 ? queryForm.keywords : false,\n        queryForm.type.length !== 0 ? queryForm.type : false,\n        queryForm.modules.length !== 0 ? queryForm.modules : false,\n        queryForm.tags.length !== 0 ? queryForm.tags : false,\n        queryForm.target.length !== 0 ? queryForm.target : false,\n      );\n\n      for (let i = 0; i < materialData.length; i++) {\n        switch (materialData[i].material.type) {\n          case \"Document\":\n            txt.push(materialData[i].material);\n            break;\n          case \"Video\":\n            vid.push(materialData[i].material);\n            break;\n          case \"Presentatie\":\n            pres.push(materialData[i].material);\n            break;\n          default:\n            break;\n        };\n      };\n    } else {\n      const materialData = await getMaterials();\n      for (let i = 0; i < materialData.length; i++) {\n        switch (materialData[i].type) {\n          case \"Document\":\n            txt.push(materialData[i]);\n            break;\n          case \"Video\":\n            vid.push(materialData[i]);\n            break;\n          case \"Presentatie\":\n            pres.push(materialData[i]);\n            break;\n          default:\n            break;\n        };\n      };\n    };\n\n    setPresentations(pres);\n    setTextFiles(txt);\n    setVideos(vid);\n  };\n\n  const changeKeywords = (value) => {\n    setQueryForm({\n      ...queryForm,\n      keywords: value,\n    });\n  };\n\n  return (\n    <div className=\"material\">\n    {\n      signposts && (\n        <>\n\t\t\t<form className=\"material-form\" onSubmit={(e) => searchMaterials(e)}>\n\t\t\t\t{/** Keywords */}\n\t\t\t\t<div className=\"material-form-search\">\n\t\t\t\t\t{/* <div className=\"material-form-search__icon\">\n\t\t\t\t\t\t<FiSearch type=\"submit\"/> \n\t\t\t\t\t</div> */}\n\t\t\t\t\t<input className=\"material-form-search__input\" type=\"text\" onChange={(e) => changeKeywords(e.target.value)} name=\"keywords\" id=\"keywords\" placeholder=\"Zoek kernwoorden\" />\n\t\t\t\t</div>\n\t\t\t\t{/** Select type of file */}\n\t\t\t\t<div className=\"material-form-filters\">\n\t\t\t\t\t<FilterSelect\n\t\t\t\t\t\ttext=\"Type\"\n\t\t\t\t\t\toptions={typesContext}\n\t\t\t\t\t\tquery={queryForm}\n\t\t\t\t\t\tsetQuery={setQueryForm}\n\t\t\t\t\t\ttype=\"type\"\n\t\t\t\t\t/>\n\t\t\t\t\t{/** Select type of target audience */}\n\t\t\t\t\t<FilterSelect\n\t\t\t\t\t\ttext=\"Doelgroep\"\n\t\t\t\t\t\toptions={secondTypesContext}\n\t\t\t\t\t\tquery={queryForm}\n\t\t\t\t\t\tsetQuery={setQueryForm}\n\t\t\t\t\t\ttype=\"target\"\n\t\t\t\t\t/>\n\t\t\t\t\t{/** Select module/signpost */}\n\t\t\t\t\t<FilterSelect\n\t\t\t\t\t\ttext=\"Module\"\n\t\t\t\t\t\tsections={true}\n\t\t\t\t\t\toptions={signposts}\n\t\t\t\t\t\tquery={queryForm}\n\t\t\t\t\t\tsetQuery={setQueryForm}\n\t\t\t\t\t\ttype=\"modules\"\n\t\t\t\t\t/>\n\t\t\t\t\t{/** Select tag */}\n\t\t\t\t\t<FilterSelect\n\t\t\t\t\t\ttext=\"Tag\"\n\t\t\t\t\t\toptions={tags}\n\t\t\t\t\t\tquery={queryForm}\n\t\t\t\t\t\tsetQuery={setQueryForm}\n\t\t\t\t\t\ttype=\"tags\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"material-form-button\">\n\t\t\t\t\t<ButtonSmall type=\"submit\" content=\"Toepassen\" color=\"primary\"/>\n\t\t\t\t</div>\n\t\t\t</form>\n\n          <div className=\"material-content\">\n            <ListMaterials title=\"Alle tekstbestanden\" materials={textFiles && textFiles} />\n            <ListMaterials title=\"Alle presentaties\" materials={presentations && presentations} />\n            <ListMaterials title=\"Alle video's\" materials={videos && videos} />\n          </div>\n\n        </>\n      )\n    }\n    </div>\n  );\n};\n\nexport default Materials;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/Module.js",["351"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useParams, Link } from 'react-router-dom';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\n\nimport ReactHtmlParser from 'react-html-parser';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import routes\nimport * as Routes from '../routes';\n\n// Import partials\nimport { CardMaterials } from '../partials';\n\n// Import components\nimport { BackLinks, ButtonSmall, CompletedDoc } from '../components';\nimport { HiOutlinePrinter, HiOutlineCheck } from 'react-icons/hi';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Module = () => {\n    const { id } = useParams();\n    const history = useHistory();\n\n    // Services\n    const { getModule, getSignPosts } = useApi();\n    const { currentUser, getMyself } = useAuth();\n\n    // Some states\n    const [ module, setModule ] = useState();\n    const [ signpost, setSignpost ] = useState();\n    const [ checkedPaths, setCheckedPaths ] = useState();\n    const [ checkedModule, setCheckedModule ] = useState(false);\n\t\tconst [ myself, setMyself ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n            try {\n                if (currentUser) {\n                    const moduleData = await getModule(currentUser.token, id);\n                    const userData = await getMyself(currentUser.token);\n                    const signpostData = await getSignPosts(currentUser.token);\n    \n                    setCheckedPaths(userData.progress._finishedPathIds);\n                    setModule(moduleData);\n\t\t\t\t\t\t\t\t\t\tsetMyself(userData);\n    \n                    for (let i = 0; i < signpostData.length; i++) {\n                        if (signpostData[i]._moduleIds.includes(moduleData._id)) {\n                            setSignpost(signpostData[i]);\n                        };\n                    };\n    \n                    if (userData.progress._finishedModuleIds.includes(moduleData._id)) {\n                        setCheckedModule(true);\n                    };\n                };\n            } catch (e) {\n                history.push(Routes.NOT_FOUND);\n            };\n        };\n\n        fetchData();\n    }, [getModule, getSignPosts, currentUser, getMyself, id, history]);\n\n\t\tconst printModule = () => {\n\n\t\t};\n\n    useEffect(() => {\n        getAllData();\n\t}, [getAllData]);\n\n    return (\n        <>\n        {\n            module && myself && (\n                <Row className=\"signpost\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsignpost && (\n\t\t\t\t\t\t\t<BackLinks \n\t\t\t\t\t\t\t\tlinks={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpath: `${Routes.SIGNPOSTS}`,\n\t\t\t\t\t\t\t\t\t\troute: \"wegwijzers \"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpath: `${Routes.SIGNPOST.replace(':id', signpost._id)}`,\n\t\t\t\t\t\t\t\t\t\troute: ` > ${signpost.title}`\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpath: `${Routes.MODULE.replace(':id', module._id)}`,\n\t\t\t\t\t\t\t\t\t\troute: ` > ${module.title}`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\n\t\t\t\t\t<div className=\"signpost-header\">\n\t\t\t\t\t\t<h1 className=\"signpost-title\">{module.title}</h1>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcheckedModule && (\n\t\t\t\t\t\t\t\t<PDFDownloadLink document={<CompletedDoc moduleName={module.title} userName={`${myself.profile.firstName} ${myself.profile.lastName}`} />} fileName=\"completedModule.pdf\">\n\t\t\t\t\t\t\t\t\t{({ blob, url, loading, error }) => (\n\t\t\t\t\t\t\t\t\t\tloading ? '' : <HiOutlinePrinter className=\"icon__print\" title=\"Print\" />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</PDFDownloadLink>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Col lg={6}>\n\t\t\t\t\t\t{ ReactHtmlParser(module.content) }\n\t\t\t\t\t</Col>\n\n\n\t\t\t\t\t{/** All paths */}\n\t\t\t\t\t<Col lg={5} className=\"signpost-paths\">\n\t\t\t\t\t{\n\t\t\t\t\t\tmodule.paths && module.paths.map((path, i) => {\n\t\t\t\t\t\t\treturn <div className=\"signpost-modules-item\" key={i}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<p className=\"signpost-paths-item-title\">{path.title}</p>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tcheckedPaths && checkedPaths.map((pathChecked, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn pathChecked === path._id && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<HiOutlineCheck key={index} className=\"icon__check\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<Link to={`${Routes.PATH.replace(':type', path.type.toLowerCase()).replace(':id', path._id).replace(':order', 1)}`}>\n\t\t\t\t\t\t\t\t\t\t\t<ButtonSmall content=\"Open\" color=\"secondary\"/>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t</Col>\n\n\n\n\t\t\t\t\t{/** All material */}\n\t\t\t\t\t{\n\t\t\t\t\t\tcheckedModule && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<div className=\"signpost-extra\">\n\t\t\t\t\t\t\t\t\t<p className=\"signpost-undertitle\">Wat anderen hebben gedeeld:</p>\n\t\t\t\t\t\t\t\t\t<div className=\"signpost-extra-buttons\">\n\t\t\t\t\t\t\t\t\t\t<NavLink to={{pathname: Routes.MATERIALS, props: {module: module._id,}}}>\n\t\t\t\t\t\t\t\t\t\t\t<ButtonSmall content=\"Bekijk meer\" color=\"secondary\"/>\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t<NavLink to={{pathname: Routes.ADD_MATERIAL, props: {module: module._id,}}}>\n\t\t\t\t\t\t\t\t\t\t\t<ButtonSmall content=\"Plaats materiaal\" color=\"primary\"/>\n\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<CardMaterials\n\t\t\t\t\t\t\t\t\tmaterials={module.materials}\n\t\t\t\t\t\t\t\t\tuser={currentUser.id}\n\t\t\t\t\t\t\t\t\ttoken={currentUser.token}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n                </Row>\n            )\n        }\n        </>\n    )\n};\n\nexport default Module;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/CreateMaterial.js",["352","353"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Routes\nimport * as Routes from '../routes';\n\n// Services\nimport { useApi, useAuth } from '../services';\n\n// Formatting date\nimport { default as moment } from 'moment';\nimport 'moment/locale/nl-be';\n\n// Components\nimport { Tags, RadioSelect } from '../components';\n\n// Small function to force a re-render\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0);\n  return () => setValue(value => value + 1);\n};\n\nconst CreateMaterial = () => {\n  const forceUpdate = useForceUpdate();\n\n  // Routing\n  const history = useHistory();\n\n  // Services\n  const { getSignPosts, uploadDoc, createMaterial } = useApi();\n  const { currentUser } = useAuth();\n\n  // States\n  const [ signposts, setSignposts ] = useState();\n  const [ file, setFile ] = useState();\n  const [ loader, setLoader ] = useState(false);\n\n  const [ selectedTags, setSelectedTags ] = useState();\n  const [ selectedModule, setSelectedModule ] = useState();\n  const [ selectedType, setSelectedType ] = useState();\n  const [ selectedTarget, setSelectedTarget ] = useState();\n\n  const [ form, setForm ] = useState({\n    title: '',\n    description: '',\n    filename: '',\n    file: '',\n    size: '',\n    videoUrl: '',\n  });\n\n  const [ error, setError ] = useState({\n    visible: false,\n    text: '',\n  });\n\n  // Init date\n  let date = moment(Date.now());\n  moment.locale('nl-be');\n\n  const fetchData = useCallback(async () => {\n    try {\n      const signpostData = await getSignPosts(currentUser.token);\n      setSignposts(signpostData);\n    } catch (e) {\n      history.push(Routes.NOT_FOUND);\n    };\n  }, [history, currentUser, getSignPosts]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const changeInput = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const updateTags = (array) => {\n    setSelectedTags(array);\n    forceUpdate();\n  };\n\n  const updateType = (type) => {\n    setSelectedType(type);\n    setForm({\n      ...form,\n      type: type,\n    })\n    forceUpdate();\n  };\n\n  const updateModule = (module) => {\n    setSelectedModule(module);\n    forceUpdate();\n  };\n\n  const updateTarget = (target) => {\n    setSelectedTarget(target);\n    forceUpdate();\n  };\n\n  const uploadNewDocument = async (e) => {\n    e.preventDefault();\n    const upload = e.target.files[0];\n    setForm({\n      ...form,\n      filename: upload.name,\n      size: `${(upload.size / (1024*1024)).toFixed(2)}MB`\n    });\n    setFile(upload);\n  };\n\n  const updateMaterial = async (e) => {\n    e.preventDefault();\n\n    if (form.title.length === 0) {\n      setError({\n        visible: true,\n        text: \"Dit bestand heeft nog een titel nodig.\",\n      });\n      return;\n    };\n\n    if (form.description.length === 0) {\n      setError({\n        visible: true,\n        text: \"Dit bestand heeft nog een beschrijving nodig.\",\n      });\n      return;\n    };\n\n    if (!selectedModule) {\n      setError({\n        visible: true,\n        text: \"Dit bestand heeft nog een module nodig.\",\n      });\n      return;\n    };\n\n    if (!selectedTags) {\n      setError({\n        visible: true,\n        text: \"Dit bestand heeft nog een tag nodig.\",\n      });\n      return;\n    };\n\n    if (!selectedType) {\n      setError({\n        visible: true,\n        text: \"Dit bestand heeft nog een indeling nodig.\",\n      });\n      return;\n    };\n\n    if (!selectedTarget) {\n      setError({\n        visible: true,\n        text: \"Dit bestand heeft nog een doelgroep nodig.\",\n      });\n      return;\n    };\n\n    if (selectedType !== 'Video' && !file) {\n      setError({\n        visible: true,\n        text: \"Dit bestand moet nog upgeload worden.\",\n      });\n      return;\n    };\n\n    if (selectedType === 'Video' && form.videoUrl.length === 0) {\n      setError({\n        visible: true,\n        text: \"De video-url moet nog toegevoegd worden.\",\n      });\n      return;\n    };\n\n    let result;\n\n    setLoader(true);\n\n    if (form.type === 'Video') {\n      result = await createMaterial({\n        title: form.title,\n        description: form.description,\n        type: selectedType,\n        target: selectedTarget,\n        videoUrl: form.videoUrl,\n        _authorId: currentUser.id,\n        _moduleId: selectedModule,\n      });\n    } else {\n      const uploaded = await uploadDoc(file);\n\n      result = await createMaterial({\n        title: form.title,\n        description: form.description,\n        type: selectedType,\n        target: selectedTarget,\n        filename: form.filename,\n        file: uploaded.filename,\n        size: form.size,\n        _authorId: currentUser.id,\n        _moduleId: selectedModule,\n      });\n    };\n\n    history.push(Routes.MATERIAL.replace(':name', result._id));\n  };\n\n  return (\n    <>\n    {\n      signposts && (\n        <>\n          <h1>Bestand uploaden</h1>\n          <form id=\"check-form\">\n            <input onChange={(e) => changeInput(e)} placeholder=\"titel\" type=\"text\" name=\"title\" id=\"title\" required />\n            <textarea onChange={(e) => changeInput(e)} placeholder=\"beschrijving\" name=\"description\" id=\"description\" required />\n          </form>\n          <Tags \n            setForm={updateTags}\n          />\n          <RadioSelect \n            text=\"Welk soort bestand wil je uploaden\"\n            grouped={false}\n            data={[\n              {_id: \"Document\", title: \"Document\"},\n              {_id: \"Presentatie\", title: \"Presentatie\"},\n              {_id: \"Video\", title: \"Video\"},\n            ]}\n            setSelected={updateType}\n          />\n          <RadioSelect \n            text=\"Welke doelgroep\"\n            grouped={false}\n            data={[\n              {_id: \"De kiendjes\", title: \"De kiendjes\"},\n              {_id: \"De vintjes\", title: \"De vintjes\"},\n              {_id: \"De vrouwtjes\", title: \"De vrouwtjes\"},\n            ]}\n            setSelected={updateTarget}\n          />\n          <RadioSelect \n            text=\"Aan welke module wil je deze toewijzen\"\n            grouped={true}\n            data={signposts}\n            setSelected={updateModule}\n          />\n          {\n              form && form.type === 'Video' ? (\n                <input onChange={(e) => changeInput(e)} type=\"text\" placeholder=\"video-url\" name=\"videoUrl\" id=\"videoUrl\" />\n              ) : (\n                <>\n                <input type=\"file\" accept=\"application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application/pdf, image/*\" onChange={(e) => uploadNewDocument(e)} name=\"file\" id=\"file\"/>\n                {\n                  file && (\n                    <span>\n                      <strong>{file.name}</strong>\n                      <span>{date.format('L')} | {(file.size / (1024*1024)).toFixed(2)}MB</span>\n                    </span>\n                  )\n                }\n                </>\n            )\n          }\n          {\n            error.visible && (\n              error.text\n            )\n          }\n          <span onClick={() => history.push(Routes.MY_MATERIALS)}>Annuleren</span>\n          <button onClick={(e) => updateMaterial(e)} type=\"submit\">\n            Opslaan\n          </button>\n        </>\n      )\n    }\n    </>\n  );\n};\n\nexport default CreateMaterial;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/SearchResults.js",["354"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\n\n// Routes\nimport * as Routes from '../routes';\n\n// Services\nimport { useApi, useAuth } from '../services';\n\n// Bootstrap\nimport { Row, Col } from 'react-bootstrap';\n\n// Components\nimport { ButtonSmall } from '../components';\n\nconst SearchResults = () => {\n  // Routing\n  const history = useHistory();\n\n  // Services\n  const { searchEverything } = useApi();\n  const { currentUser } = useAuth();\n\n  // Check if states has been sended\n  const { state } = useLocation();\n  const keywords = state.keywords;\n\n  // States\n  const [ fullResults, setFullResults ] = useState();\n  const [ formValue, setFormValue ] = useState(keywords ? keywords : '');\n\n  // Fetch results\n  const fetchResults = useCallback(async () => {\n    try {\n      const result = await searchEverything(currentUser.token, keywords);\n      setFullResults(result);\n    } catch (e) {\n      history.push(Routes.NOT_FOUND);\n    };\n  }, [history, searchEverything, keywords, currentUser]);\n\n  useEffect(() => {\n    if (keywords) {\n      fetchResults();\n    };\n  }, [keywords, fetchResults])\n\n  // Search results\n  const searchAgain = async (e) => {\n    e.preventDefault();\n\n    const result = await searchEverything(currentUser.token, formValue);\n    setFullResults(result);\n  };\n\n  return (\n    <Row className=\"search\">\n\t\t<Col className=\"search-left\" lg={4}>\n\t\t\t<form onSubmit={(e) => searchAgain(e)}>\n\t\t\t\t<input className=\"search-left-form-input\" name=\"search\" type=\"text\" id=\"search\" placeholder=\"Wegwijzers, modules en materiaal\" onChange={(e) => setFormValue(e.target.value)} defaultValue={formValue} />\n\t\t\t</form>\n\t\t</Col>\n\n\t\t<Col className=\"search-right\" lg={8}>\n\t\t\t{\n\t\t\t\tfullResults ? (\n\t\t\t\t\tfullResults.length === 0 ? (\n\t\t\t\t\t\t<p className=\"search-right-indicator\">Er zijn geen items gevonden</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p className=\"search-right-indicator\">{`Er ${fullResults.count === 1 ? 'is' : 'zijn'} ${fullResults.count} ${fullResults.count === 1 ? 'item' : 'items'} gevonden`}</p>\n\t\t\t\t\t\t<div className=\"search-right-results\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfullResults.results.map((item, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"search-right-results-item\" key={index} to={item.path}>\n\t\t\t\t\t\t\t\t\t<h5 className=\"search-right-results-item__title\">{item.title}</h5>\n\t\t\t\t\t\t\t\t\t<ButtonSmall content={item.tag} color=\"secondary\"/>\n\t\t\t\t\t\t\t\t\t<p className=\"search-right-results-item__text\">{item.bottomText}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)\n\t\t\t}\n\t\t</Col>\n    </Row>\n  );\n};\n\nexport default SearchResults;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/EditMaterial.js",["355"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n// Routes\nimport * as Routes from '../routes';\n\n// Services\nimport { useApi, useAuth } from '../services';\n\n// Formatting date\nimport { default as moment } from 'moment';\nimport 'moment/locale/nl-be';\n\n// Components\nimport { Tags, RadioSelect } from '../components';\n\n// Small function to force a re-render\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0);\n  return () => setValue(value => value + 1);\n};\n\nconst EditMaterial = () => {\n  const forceUpdate = useForceUpdate();\n\n  // Get material id\n  const { state } = useLocation();\n  const materialId = state.id;\n\n  // Routing\n  const history = useHistory();\n\n  // Services\n  const { getMaterial, editMaterial, getSignPosts, uploadDoc } = useApi();\n  const { currentUser } = useAuth();\n\n  // States \n  const [ material, setMaterial ] = useState();\n  const [ signposts, setSignposts ] = useState();\n  const [ newFile, setNewFile ] = useState();\n\n  const [ selectedTags, setSelectedTags ] = useState();\n  const [ selectedModule, setSelectedModule ] = useState();\n  const [ selectedType, setSelectedType ] = useState();\n  const [ selectedTarget, setSelectedTarget ] = useState();\n\n  const [ form, setForm ] = useState({\n    title: '',\n    description: '',\n    _moduleId: '',\n    type: '',\n    filename: '',\n    file: '',\n    size: '',\n    videoUrl: '',\n    target: '',\n    _tagIds: [],\n  });\n\n  // Init date\n  let created = moment(material && material._createdAt);\n  let newCreated = moment(Date.now());\n  moment.locale('nl-be');\n\n  const fetchMaterial = useCallback(async () => {\n    try {\n      if (!materialId) {\n        history.push(Routes.NOT_FOUND);\n        return;\n      };\n\n      const data = await getMaterial(materialId);\n      const signpostsData = await getSignPosts(currentUser.token);\n\n      setMaterial(data);\n      setForm({\n        title: data.title,\n        description: data.description,\n        _moduleId: data._moduleId,\n        type: data.type,\n        filename: data.filename,\n        file: data.file,\n        size: data.size,\n        videoUrl: data.videoUrl,\n        target: data.target,\n        _tagIds: data._tagIds,\n      });\n      setSelectedTags(data.tags ? data.tags : '');\n      setSelectedTarget(data.target);\n      setSignposts(signpostsData);\n    } catch (e) {\n      history.push(Routes.NOT_FOUND);\n    };\n  }, [materialId, history, getMaterial, getSignPosts, currentUser]);\n\n  useEffect(() => {\n    fetchMaterial();\n  }, [fetchMaterial]);\n\n  const uploadNewDocument = async (e) => {\n    e.preventDefault();\n    const upload = e.target.files[0];\n    setForm({\n      ...form,\n      filename: upload.name,\n      size: `${(upload.size / (1024*1024)).toFixed(2)}MB`,\n      file: null,\n    });\n    setNewFile(e.target.files[0]);\n  };\n\n  const updateTags = (array) => {\n    setSelectedTags(array);\n    forceUpdate();\n  };\n\n  const updateType = (type) => {\n    setSelectedType(type);\n    setForm({\n      ...form,\n      type: type,\n    })\n    forceUpdate();\n  };\n\n  const updateModule = (module) => {\n    setSelectedModule(module);\n    forceUpdate();\n  };\n\n  const updateTarget = (target) => {\n    setSelectedTarget(target);\n    forceUpdate();\n  };\n\n  const updateMaterial = async (e) => {\n    // e.preventDefault();\n\n    let result;\n    let tags;\n\n    if (selectedTags) {\n      let array = [];\n\n      for (let i = 0; i < selectedTags.length; i++) {\n        array.push(selectedTags._id);\n      };\n\n      tags = array;\n    } else {\n      tags = form._tagIds;\n    };\n\n    if (selectedType === 'Video') {\n      result = await editMaterial(material._id, {\n        title: form.title,\n        description: form.description,\n        _moduleId: selectedModule ? selectedModule : form._moduleId,\n        type: selectedType ? selectedType : form.type,\n        videoUrl: form.videoUrl,\n        target: selectedTarget,\n        _tagIds: tags,\n      });\n    } else {\n      if (form.file === null) {\n        const uploaded = await uploadDoc(newFile);\n        result = await editMaterial(material._id, {\n          title: form.title,\n          description: form.description,\n          _moduleId: selectedModule ? selectedModule : form._moduleId,\n          type: selectedType ? selectedType : form.type,\n          filename: uploaded.filename,\n          file: form.file,\n          size: form.size,\n          target: selectedTarget,\n          _tagIds: tags,\n        });\n      } else {\n        result = await editMaterial(material._id, {\n          title: form.title,\n          description: form.description,\n          _moduleId: selectedModule ? selectedModule : form._moduleId,\n          type: selectedType ? selectedType : form.type,\n          filename: form.file,\n          file: form.file,\n          size: form.size,\n          target: selectedTarget,\n          _tagIds: tags,\n        });\n      };\n    };\n\n    if (result) history.push(Routes.MATERIAL.replace(':name', material._id));\n  };\n\n  const changeInput = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n    {\n      material && signposts && (\n        <>\n          <h1>Bestand bewerken</h1>\n          <form>\n            <input onChange={(e) => changeInput(e)} type=\"text\" defaultValue={form.title} name=\"title\" id=\"title\" />\n            <textarea onChange={(e) => changeInput(e)} defaultValue={form.description} name=\"description\" id=\"description\" />\n          </form>\n          <Tags \n            defaultTags={material.tags} \n            setForm={updateTags}\n          />\n          <RadioSelect \n            text=\"Welk soort bestand wil je uploaden\"\n            grouped={false}\n            data={[\n              {_id: \"Document\", title: \"Document\"},\n              {_id: \"Presentatie\", title: \"Presentatie\"},\n              {_id: \"Video\", title: \"Video\"},\n            ]}\n            defaultSelected={material.type}\n            setSelected={updateType}\n          />\n          <RadioSelect \n            text=\"Welke doelgroep\"\n            grouped={false}\n            data={[\n              {_id: \"De kiendjes\", title: \"De kiendjes\"},\n              {_id: \"De vintjes\", title: \"De vintjes\"},\n              {_id: \"De vrouwtjes\", title: \"De vrouwtjes\"},\n            ]}\n            defaultSelected={material.target}\n            setSelected={updateTarget}\n          />\n          <RadioSelect \n            text=\"Aan welke module wil je deze toewijzen\"\n            grouped={true}\n            data={signposts}\n            defaultSelected={material._moduleId}\n            setSelected={updateModule}\n          />\n          {\n              form && form.type === 'Video' ? (\n                <input onChange={(e) => changeInput(e)} type=\"text\" defaultValue={form.videoUrl} name=\"videoUrl\" id=\"videoUrl\" />\n              ) : (\n                <>\n                <input type=\"file\" accept=\"application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application/pdf, image/*\" onChange={(e) => uploadNewDocument(e)} name=\"file\" id=\"file\"/>\n                <span>\n                  <strong>{form.filename}</strong>\n                  <span>{form.file ? created.format('L') : newCreated.format('L')} | {form.size}</span>\n                </span>\n                </>\n            )\n          }\n          <span onClick={() => history.push(Routes.MY_MATERIALS)}>Annuleren</span>\n          <button onClick={(e) => updateMaterial(e)} type=\"submit\">\n            Opslaan\n          </button>\n        </>\n      )\n    }\n    </>\n  );\n};\n\nexport default EditMaterial;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/config/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/assets/images/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/progress/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/navigation/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/documents/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/links/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/cards/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/header/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/index.js",["356"],"import Exercises from './Exercises';\nimport Theory from './Theory';\nimport Order from './Order';\nimport Video from './Video';\nimport TipsAndTricks from './TipsAndTricks';\n\nexport {\n  Exercises,\n  Theory,\n  Video,\n  TipsAndTricks,\n};\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/RadioSelect.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/Checkbox.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/Tags.js",["357"],"import React, { useCallback, useEffect, useState } from 'react';\n\n// Services\nimport { useApi } from '../../services';\n\n// Small function to force a re-render\nconst useForceUpdate = () => {\n  const [value, setValue] = useState(0);\n  return () => setValue(value => value + 1);\n};\n\nconst Tags = ({ defaultTags, setForm }) => {\n  const forceUpdate = useForceUpdate();\n\n  // Services\n  const { getTags } = useApi();\n\n  // States\n  const [ tags, setTags ] = useState();\n  const [ selectedTags, setSelectedTags ] = useState([]);\n  const [ typedTag, setTypedTag ] = useState({\n    'text': '',\n    'list': false,\n  });\n\n  // Fetch all tags\n  const fetchTags = useCallback(async () => {\n    const data = await getTags();\n    setTags(data);\n\n    if (defaultTags) setSelectedTags(defaultTags);\n  }, [getTags, defaultTags]);\n\n  useEffect(() => {\n    fetchTags();\n  }, [fetchTags]);\n\n  const checkTag = (e) => {\n    if (e.target.value.length === 0) {\n      setTypedTag({\n        text: e.target.value,\n        list: false,\n      });\n    } else {\n      setTypedTag({\n        text: e.target.value,\n        list: true,\n      });\n    };\n  };\n\n  const removeTag = (id) => {\n    let array = selectedTags;\n\n    for (let i = 0; i < selectedTags.length; i++) {\n      if (selectedTags[i]._id === id) {\n        array.splice(i, 1);\n      };\n    };\n\n    setSelectedTags(array);\n    setForm(array);\n    forceUpdate();\n  };\n\n  const addTag = (e, tag) => {\n    e.preventDefault();\n    let array = selectedTags;\n    array.push(tag);\n    setSelectedTags(array);\n    setForm(array);\n    forceUpdate();\n  };\n\n  return (\n    <div>\n      <div>\n        <strong>Selecteer een aantal tags</strong>\n        {\n          selectedTags && selectedTags.map((tag, index) => {\n            return (\n              <div onClick={() => removeTag(tag._id)} key={index}>{tag.name}</div>\n            )\n          })\n        }\n        <input onChange={(e) => checkTag(e)} type=\"text\" name=\"tag\" id=\"tag\" />\n        {\n          typedTag.list && (\n            <form>\n              <div>\n                {tags && tags.map((tag, index) => {\n                  return tag.name.includes(typedTag.text.toLowerCase()) && <button key={index} onClick={(e) => addTag(e, tag)}>{tag.name}</button>\n                })}\n              </div>\n            </form>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Tags;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/forms/FilterSelect.js",["358","359"],"import React, { useState } from 'react';\n\n// Icons\nimport Arrow from '../../assets/icons/arrow-blue.svg';\nimport { IoIosArrowUp } from 'react-icons/io'\n\n// Components\nimport { Checkbox } from '../forms';\n\nimport './FilterSelect.scss';\n\nconst FilterSelect = ({text, options, sections, setQuery, query, type}) => {\n  // States\n  const [ selected, setSelected ] = useState([]);\n  const [ showSelect, setShowSelect ] = useState(false);\n  const [ selectedString, setSelectedString ] = useState();\n\n  // Selection a group of options\n  const selectSection = (index) => {\n    const grouped =  document.getElementsByClassName('filter-select__select--section__options')[index].children;\n\n    for (let i = 0; i < grouped.length; i++) {\n      grouped[i].children[1].children[0].children[0].checked = true;\n\n      if (!selected.filter(e => e.id === grouped[i].children[1].children[0].children[0].id).length > 0) {\n        let array = selected;\n        array.push({id: grouped[i].children[1].children[0].children[0].id, name: grouped[i].children[1].children[0].children[0].name});\n\n        let queryArray = query[type];\n        queryArray.push(grouped[i].children[1].children[0].children[0].id);\n        \n        setSelected(array);\n        createPlaceholder(array);\n        setQuery({\n          ...query,\n          [type]: queryArray,\n        });\n      };\n    };\n  };\n\n  // Change an item to checked or not\n  const editSelected = (id, name) => {\n    let array = selected;\n    let queryArray = query[type];\n\n    if (!queryArray.includes(id)) {\n      queryArray.push(id);\n    } else {\n      const queryIndex = queryArray.indexOf(id);\n      queryArray.splice(queryIndex, 1);\n    };\n\n    if (!selected.filter(e => e.id === id).length > 0) {\n      array.push({id: id, name: name});\n    } else {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].id === id) {\n          array.splice(i, 1);\n        };\n      };\n    };\n\n    setSelected(array);\n    createPlaceholder(array);\n    setQuery({\n      ...query,\n      [type]: queryArray,\n    });\n  };\n\n  // Create the string of checked items\n  const createPlaceholder = (array) => {\n    let string = '';\n\n    for (let i = 0; i < array.length; i++) {\n      string = string + array[i].name + ', ';\n    };\n\n    string = string.substring(0, 20).toLowerCase();\n    setSelectedString(string);\n  };\n\n  return (\n    <div className=\"filter-select\" className={showSelect ? 'filter-select filter-select--active' : 'filter-select' } >\n      <div className=\"filter-select__field\" onClick={() => setShowSelect(!showSelect)} >\n        { \n          selectedString ? `${selectedString}...` : text \n        } \n        {/* <img src={Arrow} alt=\"arrow\" className={showSelect ? 'arrow-up' : 'arrow-down'} /> */}\n\t\t<IoIosArrowUp className={showSelect ? 'arrow-up' : 'arrow-down'}/>\n      </div>\n      {\n        showSelect && (\n          <div className=\"filter-select__select\">\n            {\n              !sections ? options.map((option, index) => {\n                return (\n                  <div key={index} className=\"filter-select__select--section__options--option\">\n                    <label htmlFor={option.id ? option.id : option._id}>{option.title ? option.title : option.name}</label>\n                    <Checkbox change={editSelected} name={option.title ? option.title : option.name} id={option.id ? option.id : option._id} />\n                  </div>\n                )\n              }) : options.map((option, index) => {\n                return (\n                  <div key={index} className=\"filter-select__select--section\">\n                    <span className=\"filter-select__select--section__title\" onClick={() => selectSection(index)}>{option.shortedTitle}</span>\n                    <div className=\"filter-select__select--section__options\">\n                      {\n                        option.modules.map((innerOption, innerIndex) => {\n                          return <div key={innerIndex} className=\"filter-select__select--section__options--option\">\n                            <label htmlFor={innerOption.id}>{innerOption.title}</label>\n\t\t\t\t\t\t\t<div className=\"filter-select__select--section__options--option-checkbox\">\n                           \t\t<Checkbox change={editSelected} name={innerOption.title} id={innerOption.id} />\n\t\t\t\t\t\t\t</div>\n                          </div>\n                        })\n                      }\n                    </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n        )\n      }\n    </div>\n  );\n};\n\nexport default FilterSelect;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/navigation/NavigationItem.js",["360","361"],"import React, { useState, useEffect } from 'react';\n\n// Import components\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss' \n\nconst NavigationItem = ({ index, title, alt, endpoint, logo }) => {\n\n\treturn (\n\t\t<NavLink to={endpoint} className=\"nav-list-link\" activeClassName=\"nav-list-link--active\">\n\t\t\t<div className=\"nav-list-link__icon-wrapper\">\n\t\t\t\t<img className=\"nav-list-link__icon\" src={logo} alt={alt}/>\n\t\t\t</div>\n\t\t\t<div className=\"nav-list-link__text\">\n\t\t\t\t<span className=\"nav-list-link__text-span\">Wegwijzer {index}</span>\n\t\t\t\t<p className=\"nav-list-link__text-title\">{title}</p>\n\t\t\t</div>\n\t\t</NavLink>\n\t);\n\n};\n\nexport default NavigationItem;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/navigation/Navigation.js",["362","363"],"import React, { useCallback, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Importing services\nimport { useApi, useAuth } from '../../services';\n\n// Import components\nimport { NavigationItem } from './'\nimport { Link } from 'react-router-dom';\nimport { LogoColor } from '../../assets/logos';\n\nimport * as Routes from '../../routes';\n\n// Import config\nimport { apiConfig } from '../../config';\n\nimport './Navigation.scss' \n\nconst Navigation = () => {\n\tconst history = useHistory();\n\n    const { getSignPosts } = useApi();\n    const { currentUser } = useAuth();\n\n    // Some important states\n    const [ signposts, setSignposts ] = useState();\n\n    const getAllData = useCallback(() => {\n        const fetchData = async () => {\n            if (currentUser) {\n                const signpostsData = await getSignPosts(currentUser.token);\n                setSignposts(signpostsData);\n            };\n        };\n\n        fetchData();\n    }, [ getSignPosts, currentUser ]);\n\n    useEffect(() => {\n        getAllData();\n    }, [ getAllData ]);\n\n    // Going to specific signpost\n    const goToSign = async (id) => {\n        history.push(`/signposts/${id}`);\n\t};\n\t\n\n\treturn (\n\t\t\t<div className=\"nav\">\n\t\t\t\t<Link className=\"nav-header\" to=\"/dashboard\">\n\t\t\t\t\t<img className=\"nav-header__image\" src={LogoColor}/>\n\t\t\t\t</Link>\n\n\t\t\t\t<nav className=\"nav-list\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsignposts && signposts.map((signpost, i) => {\n\t\t\t\t\t\t\treturn <NavigationItem \n\t\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\t\tindex={i+1}\n\t\t\t\t\t\t\t\t\t\ttitle={signpost.shortedTitle} \n\t\t\t\t\t\t\t\t\t\talt={signpost.shortedTitle} \n\t\t\t\t\t\t\t\t\t\tendpoint={`/signposts/${signpost.id}`} \n\t\t\t\t\t\t\t\t\t\tlogo={`${apiConfig.baseURL}file/${signpost.icon}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t})\n        \t\t\t}\n\t\t\t\t</nav>\n\t\t\t\t\n\t\t\t\t<Link className=\"nav-link\" to={Routes.SIGNPOSTS}>Alle wegwijzers</Link>\n\n\t\t\t</div>\n\t);\n\n};\n\nexport default Navigation;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/progress/ProgressItem.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/progress/Progress.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/documents/CompletedDoc.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/cards/CardMaterial.js",["364"],"import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\n// Import services\nimport { useApi } from '../../services';\n\n// Import routes \nimport * as Routes from '../../routes';\n\n// Import config\nimport { apiConfig } from '../../config';\n\n// Images\nimport { DefaultImage } from '../../assets/images';\n\n// Icons\nimport { IoHeartSharp, IoHeartOutline } from 'react-icons/io5'\nimport { HiOutlineDownload } from 'react-icons/hi';\n\nimport './Cards.scss';\n\nconst CardMaterial = ({material, user, token}) => {\n  const history = useHistory();\n\n  // Services\n  const { addLikeToMaterial, addDislikeToMaterial, getDoc } = useApi();\n\n  // States\n  const [ liked, setLiked ] = useState(material && material._likeIds.includes(user));\n\n  // Like the material\n  const likeMaterial = async () => {\n    setLiked(!liked);\n\n    await addLikeToMaterial(token, user, material._id);\n  };\n\n  // Dislike the material\n  const dislikeMaterial = async () => {\n    setLiked(!liked);\n\n    await addDislikeToMaterial(token, user, material._id);\n  };\n\n  // Download material\n  const readMaterial = () => {\n    getDoc(material.file);\n  };\n\n  console.log(material);\n\n  return (\n\t  <div className=\"material-card\" >\n\n\t\t<Link className=\"material-card-link\" to={`${Routes.MATERIAL.replace(':name', material.id)}`}>\n\n\t\t\t\t<div className=\"material-card-profile\">\n\t\t\t\t\t{\n\t\t\t\t\t\tmaterial.author.profile.avatar ? (\n\t\t\t\t\t\t\t<img className=\"material-card-profile__image\" src={`${apiConfig.baseURL}file/${ material.author.profile.avatar}`} alt=\"profile\"/>\n\t\t\t\t\t\t) : <img className=\"material-detail-right-profile__image\" src={ DefaultImage } alt=\"profile\"/>\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"material-card-profile__text\">\n\t\t\t\t\t\t<p className=\"material-card-profile__text-name\">{material.author.profile.firstName + ' ' + material.author.profile.lastName}</p>\n\t\t\t\t\t\t<p className=\"material-card-profile__text-settings\">{material.author.profile.schoolName}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<p className=\"material-card-text\">\n\t\t\t\t\t\"Prachtig documentje over het zelfgestuurd leren binnen onze school\"\n\t\t\t\t</p>\n\n\t\t\t\t<div className=\"material-card-image\" onClick={readMaterial}>\n\t\t\t\t\t{\n\t\t\t\t\t\tliked ? <div className=\"material-card-icon-heart-wrapper\"> \n\t\t\t\t\t\t\t\t\t<IoHeartSharp className=\"material-card-icon-heart material-card-icon-heart--fill\" onClick={dislikeMaterial} title=\"Dislike\"/>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t: \t<div className=\"material-card-icon-heart-wrapper\">\n\t\t\t\t\t\t\t\t\t<IoHeartOutline className=\"material-card-icon-heart\" onClick={likeMaterial} title=\"Like\"/>\n\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t}\n\n\t\t\t\t\t<HiOutlineDownload className=\"material-card-image__download\"/>\n\t\t\t\t</div>\n\t\t</Link>  \n\t</div>\n  );\n};\n\nexport default CardMaterial;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/links/BackLinks.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/header/Header.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/ListMaterialItem.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/ListMaterials.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/materials/CardMaterials.js",["365"],"import React, { useState } from 'react';\n\n// Import components\nimport { CardMaterial } from '../../components';\n\nimport './Materials.scss';\n\nconst CardMaterials = ({materials, user, token}) => {\n  const [ pagination, setPagination ] = useState(2);\n\n  return (\n    <div className=\"material-cards\">\n      {\n        materials ? materials.map((material, index) => {\n          return index <= pagination && (\n            <CardMaterial key={index} user={user} token={token} material={material} />\n          )\n        }) : 'Er zijn nog geen bestanden geüpload'\n      }\n    </div>\n  );\n};\n\nexport default CardMaterials;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/TipsAndTricks.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Video.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Order.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Theory.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/partials/paths/Exercises.js",["366","367"],"import React, { useEffect, useState } from 'react';\n\n// Services\nimport { useAuth } from '../../services';\n\nimport './Paths.scss';\n\nconst Exercises = ({exercises, previousResults}) => {\n\n  // Services\n  const { editProgress, currentUser } = useAuth();\n  const [ showPrevious, setShowPrevious ] = useState(true);\n\n  useEffect(() => {\n    if(showPrevious) {\n      if (previousResults && previousResults.length !== 0) {\n        for (let i = 0; i < previousResults.length; i++) {\n          if (previousResults[i].answers[0].response) {\n            document.getElementById(previousResults[i].questionId).value = previousResults[i].answers[0].response;\n          };\n\n          for (let j = 0; j < exercises.length; j++) {\n            if (previousResults[i].questionId === exercises[j]._id) {\n              for (let k = 0; k < previousResults[i].answers.length; k++) {\n                for (let l = 0; l < exercises[j].answers.length; l++) {\n                  if(previousResults[i].answers[k].answerId === exercises[j].answers[l]._id) {\n                    if (previousResults[i].answers[k].correct === exercises[j].answers[l].correct) {\n                      document.getElementById(previousResults[i].answers[k].answerId).className = 'correct-answer';\n                      console.log(previousResults[i].answers[k].answerId)\n                    } else {\n                      document.getElementById(previousResults[i].answers[k].answerId).className = 'wrong-answer';\n                      console.log(previousResults[i].answers[k].answerId)\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  }, [previousResults, exercises]);\n\n  const Question = ({element, index}) => {\n    return element.multiple ? (\n      <fieldset name={`question${index}`} className=\"exercise-fieldset\">\n        <legend className=\"exercise__question\">\n          {element.question}\n        </legend>\n        {\n          element.answers.map((innerElement, innerIndex) => {\n            return <label className=\"exercise-fieldset-label\" key={innerIndex}> {innerElement.text}\n\t\t\t\t\t\t<input className=\"checkbox\" type=\"checkbox\" id={innerElement._id} value={innerElement.text} name={`question${index}`} />\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t</label>\n          })\n        }\n      </fieldset>\n    ) : (\n      <fieldset name={`question${index}`} className=\"exercise-fieldset\">\n        <legend className=\"exercise__question\">\n          {element.question}\n        </legend>\n        {\n          element.answers.map((innerElement, innerIndex) => {\n            return <label className=\"exercise-fieldset-label\" key={innerIndex}> {innerElement.text}\n\t\t\t\t\t\t<input className=\"checkbox\" type=\"radio\" id={innerElement._id} className=\"exercise__radio\" value={innerElement.text} name={`question${index}`} />\n\t\t\t\t\t\t<span className=\"checkmark checkmark-radio\"></span>\n\t\t\t\t\t</label>\n          })\n        }\n      </fieldset>\n    )\n  };\n\n  const OpenQuestion = ({element, index}) => {\n    return (\n      <div className=\"exercise-fieldset\">\n        <label htmlFor={element._id} className=\"exercise__question\">\n          {element.question}\n        </label>\n        <textarea name={element._id} id={element._id} className=\"exercise__textarea\" />\n      </div>\n    )\n  };\n\n  const submitExercise = async (e) => {\n    e.preventDefault();\n\n    let questionIndex = 0;\n    let answerIndex = 0;\n    let arrayOfAnswers = [];\n\n    for (let i = 0; i < e.target.length; i++) {\n      if (e.target[i].localName === 'textarea') {\n        let object = {questionId: e.target[i].id, answers: []};\n        object.answers.push({response: e.target[i].value});\n        arrayOfAnswers.push(object);\n      };\n\n      if (e.target[i].localName === 'fieldset') {\n        questionIndex = questionIndex + 1;\n\n        // console.log('Vraag', questionIndex-1);\n        let object = {questionId: exercises[questionIndex-1]._id, answers: []};\n        answerIndex = 0;\n        for (let j = 0; j < e.target[i].children.length; j++) {\n          if (j > 0) {\n            answerIndex = answerIndex + 1;\n            const result = e.target[i].children[j].children[0].checked;\n            const id = e.target[i].children[j].children[0].id;\n\n            // Check if they put it as correct\n            if (result === true) {\n              // Check if it's also correct\n              if (result === exercises[questionIndex-1].answers[answerIndex-1].correct) {\n                object.answers.push({answerId: exercises[questionIndex-1].answers[answerIndex-1]._id, text: exercises[questionIndex-1].answers[answerIndex-1].text, correct: result});                // console.log('Antwoord ', answerIndex-1 ,' op vraag ', questionIndex-1, ' is juist');\n                document.getElementById(id).className = 'correct-answer';\n              } else {\n                object.answers.push({answerId: exercises[questionIndex-1].answers[answerIndex-1]._id, text: exercises[questionIndex-1].answers[answerIndex-1].text, correct: result});                // console.log('Antwoord ', answerIndex-1 ,' op vraag ', questionIndex-1, ' is onjuist');\n                document.getElementById(id).className = 'wrong-answer';\n              };\n            };\n\n            // Check if they put it as incorrect\n            if (result === false) {\n              // Check if it's also incorrect\n              if (result === exercises[questionIndex-1].answers[answerIndex-1].correct) {\n                object.answers.push({answerId: exercises[questionIndex-1].answers[answerIndex-1]._id, text: exercises[questionIndex-1].answers[answerIndex-1].text, correct: result});\n                document.getElementById(id).className = 'wrong-answer';\n                // console.log('Geen antwoord ', answerIndex-1 ,' op vraag ', questionIndex-1, ' is juist');\n              } else {\n                object.answers.push({answerId: exercises[questionIndex-1].answers[answerIndex-1]._id, text: exercises[questionIndex-1].answers[answerIndex-1].text, correct: result});                // console.log('Geen antwoord ', answerIndex-1 ,' op vraag ', questionIndex-1, ' is onjuist');\n                document.getElementById(id).className = 'correct-answer';\n              };\n            };\n          };\n        };\n\n        arrayOfAnswers.push(object);\n      };\n    };\n\n    await editProgress(currentUser.token, {exercise: arrayOfAnswers});\n  };\n\n  const redoExercise = () => {\n    setShowPrevious(false);\n\n    for (let i = 0; i < exercises.length; i++) {\n      for (let j = 0; j < exercises[i].answers.length; j++) {\n        document.getElementById(exercises[i].answers[j]._id).className = '';\n      };\n    };\n  };\n\n\treturn (\n\t\t<form className=\"exercise\" onSubmit={(e) => submitExercise(e)}>\n\t\t\t{\n\t\t\t\texercises.map((element, index) => {\n\t\t\t\treturn !element.open ? <Question key={index} index={index} element={element} /> : <OpenQuestion element={element} index={index} key={index} />\n\t\t\t\t})\n\t\t\t}\n\t\t\t{\n\t\t\t\t!showPrevious && (\n\t\t\t\t<button type=\"submit\">Klikkerdeklik</button>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<span className=\"exercise-restart\" onClick={redoExercise}>Herbeginnen</span>\n\t\t</form>\n\t)\n};\n\nexport default Exercises;\n","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/ButtonSmall.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/buttons/ButtonLarge.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/assets/logos/index.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/MaterialLayout.js",["368","369","370","371"],"import { default as React, useCallback, useEffect, useState } from 'react';\n\nimport './MaterialLayout.scss';\n\n// Import services\nimport { useAuth, useApi } from '../services';\n\n// Import config\nimport { apiConfig } from '../config';\n\n// Import components\nimport { Navigation, Header } from '../components'\n\nconst MaterialLayout = ({ children }) => {\n    // Use services\n    const { getMyself, currentUser } = useAuth();\n    const { getSignPosts } = useApi();\n\n    // All accessable data\n    const [ signPosts, setSignPosts ] = useState();\n    const [ user, setUser ] = useState();\n\tconst [ avatar, setAvatar ] = useState();\n\n\tconst pageTitle = 'Materiaal';\n\n    const getAllData = useCallback(() => {\n        const easyFetch = async () => {\n            // All user information\n            if (currentUser) {\n              const userData = await getMyself(currentUser.token);\n              setUser(userData);\n  \n              // Get users avatar, if he has one\n              if (userData.profile.avatar) {\n                  setAvatar(userData.profile.avatar);\n              };\n  \n              // All signposts\n              const signPostsData = await getSignPosts(currentUser.token);\n              setSignPosts(signPostsData);\n            };\n        };\n\n        easyFetch();\n    }, [getMyself, getSignPosts, currentUser]);\n\n    useEffect(() => {\n        getAllData();\n    }, [getAllData]);\n\n  return (\n    <div className=\"page\">\n\t\t<Navigation/>\n\t\t<main className=\"page-main\">\n\t\t\t<Header pageTitle={pageTitle}/>\n\t\t\t{children}\n\t\t</main>\n    </div>\n  );\n};\n\nexport default MaterialLayout;","/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/components/cards/CardSignpost.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/layouts/ErrorLayout.js",[],"/Users/yentel/Desktop/StudioGDM/Platform/RouteZ/client/src/pages/NotFound.js",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":19},{"ruleId":"376","severity":1,"message":"380","line":20,"column":13,"nodeType":"378","messageId":"379","endLine":20,"endColumn":22},{"ruleId":"376","severity":1,"message":"381","line":21,"column":13,"nodeType":"378","messageId":"379","endLine":21,"endColumn":17},{"ruleId":"376","severity":1,"message":"382","line":22,"column":10,"nodeType":"378","messageId":"379","endLine":22,"endColumn":16},{"ruleId":"376","severity":1,"message":"377","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":19},{"ruleId":"376","severity":1,"message":"380","line":21,"column":13,"nodeType":"378","messageId":"379","endLine":21,"endColumn":22},{"ruleId":"376","severity":1,"message":"381","line":22,"column":13,"nodeType":"378","messageId":"379","endLine":22,"endColumn":17},{"ruleId":"376","severity":1,"message":"382","line":23,"column":10,"nodeType":"378","messageId":"379","endLine":23,"endColumn":16},{"ruleId":"376","severity":1,"message":"383","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":20},{"ruleId":"376","severity":1,"message":"382","line":15,"column":13,"nodeType":"378","messageId":"379","endLine":15,"endColumn":19},{"ruleId":"376","severity":1,"message":"384","line":39,"column":11,"nodeType":"378","messageId":"379","endLine":39,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":71,"column":6,"nodeType":"387","endLine":71,"endColumn":104},{"ruleId":"376","severity":1,"message":"388","line":14,"column":23,"nodeType":"378","messageId":"379","endLine":14,"endColumn":34},{"ruleId":"376","severity":1,"message":"381","line":25,"column":13,"nodeType":"378","messageId":"379","endLine":25,"endColumn":17},{"ruleId":"376","severity":1,"message":"389","line":26,"column":13,"nodeType":"378","messageId":"379","endLine":26,"endColumn":18},{"ruleId":"376","severity":1,"message":"390","line":27,"column":13,"nodeType":"378","messageId":"379","endLine":27,"endColumn":20},{"ruleId":"376","severity":1,"message":"391","line":28,"column":13,"nodeType":"378","messageId":"379","endLine":28,"endColumn":19},{"ruleId":"376","severity":1,"message":"392","line":28,"column":21,"nodeType":"378","messageId":"379","endLine":28,"endColumn":30},{"ruleId":"376","severity":1,"message":"393","line":80,"column":11,"nodeType":"378","messageId":"379","endLine":80,"endColumn":21},{"ruleId":"376","severity":1,"message":"394","line":18,"column":17,"nodeType":"378","messageId":"379","endLine":18,"endColumn":21},{"ruleId":"395","severity":1,"message":"396","line":80,"column":8,"nodeType":"397","endLine":80,"endColumn":70,"suggestions":"398"},{"ruleId":"376","severity":1,"message":"382","line":51,"column":11,"nodeType":"378","messageId":"379","endLine":51,"endColumn":17},{"ruleId":"376","severity":1,"message":"399","line":51,"column":19,"nodeType":"378","messageId":"379","endLine":51,"endColumn":28},{"ruleId":"376","severity":1,"message":"400","line":11,"column":10,"nodeType":"378","messageId":"379","endLine":11,"endColumn":18},{"ruleId":"376","severity":1,"message":"401","line":66,"column":9,"nodeType":"378","messageId":"379","endLine":66,"endColumn":20},{"ruleId":"376","severity":1,"message":"402","line":19,"column":10,"nodeType":"378","messageId":"379","endLine":19,"endColumn":15},{"ruleId":"376","severity":1,"message":"403","line":36,"column":11,"nodeType":"378","messageId":"379","endLine":36,"endColumn":17},{"ruleId":"376","severity":1,"message":"404","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":17},{"ruleId":"376","severity":1,"message":"402","line":19,"column":10,"nodeType":"378","messageId":"379","endLine":19,"endColumn":15},{"ruleId":"376","severity":1,"message":"405","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":13},{"ruleId":"376","severity":1,"message":"402","line":8,"column":10,"nodeType":"378","messageId":"379","endLine":8,"endColumn":15},{"ruleId":"376","severity":1,"message":"406","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":13},{"ruleId":"407","severity":1,"message":"408","line":85,"column":36,"nodeType":"409","endLine":85,"endColumn":117},{"ruleId":"376","severity":1,"message":"410","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"411","line":1,"column":27,"nodeType":"378","messageId":"379","endLine":1,"endColumn":36},{"ruleId":"376","severity":1,"message":"412","line":44,"column":11,"nodeType":"378","messageId":"379","endLine":44,"endColumn":19},{"ruleId":"385","severity":1,"message":"386","line":52,"column":6,"nodeType":"387","endLine":52,"endColumn":58},{"ruleId":"376","severity":1,"message":"413","line":23,"column":9,"nodeType":"378","messageId":"379","endLine":23,"endColumn":16},{"ruleId":"376","severity":1,"message":"414","line":9,"column":23,"nodeType":"378","messageId":"379","endLine":9,"endColumn":36},{"ruleId":"395","severity":1,"message":"415","line":42,"column":6,"nodeType":"397","endLine":42,"endColumn":34,"suggestions":"416"},{"ruleId":"407","severity":1,"message":"408","line":67,"column":70,"nodeType":"409","endLine":67,"endColumn":97},{"ruleId":"376","severity":1,"message":"377","line":9,"column":10,"nodeType":"378","messageId":"379","endLine":9,"endColumn":19},{"ruleId":"376","severity":1,"message":"380","line":20,"column":13,"nodeType":"378","messageId":"379","endLine":20,"endColumn":22},{"ruleId":"376","severity":1,"message":"381","line":21,"column":13,"nodeType":"378","messageId":"379","endLine":21,"endColumn":17},{"ruleId":"376","severity":1,"message":"382","line":22,"column":10,"nodeType":"378","messageId":"379","endLine":22,"endColumn":16},"no-native-reassign",["417"],"no-negated-in-lhs",["418"],"no-unused-vars","'apiConfig' is defined but never used.","Identifier","unusedVar","'signPosts' is assigned a value but never used.","'user' is assigned a value but never used.","'avatar' is assigned a value but never used.","'useHistory' is defined but never used.","'goToModule' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ButtonSmall' is defined but never used.","'error' is assigned a value but never used.","'success' is assigned a value but never used.","'remove' is assigned a value but never used.","'setRemove' is assigned a value but never used.","'removeUser' is assigned a value but never used.","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'getMyself'. Either include it or remove the dependency array.","ArrayExpression",["419"],"'setAvatar' is assigned a value but never used.","'FiSearch' is defined but never used.","'printModule' is assigned a value but never used.","'value' is assigned a value but never used.","'loader' is assigned a value but never used.","'NavLink' is defined but never used.","'Order' is defined but never used.","'Arrow' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'useEffect' is defined but never used.","'goToSign' is assigned a value but never used.","'history' is assigned a value but never used.","'setPagination' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showPrevious'. Either include it or remove the dependency array.",["420"],"no-global-assign","no-unsafe-negation",{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},"Update the dependencies array to be: [currentUser, getPath, id, getModules, getSignPosts, getMyself, history]",{"range":"425","text":"426"},"Update the dependencies array to be: [previousResults, exercises, showPrevious]",{"range":"427","text":"428"},[2693,2755],"[currentUser, getPath, id, getModules, getSignPosts, getMyself, history]",[1677,1705],"[previousResults, exercises, showPrevious]"]